{"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-react-native-babel-transformer/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-react-native-babel-transformer/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n// Note: This is a fork of the fb-specific transform.js\n\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly)\n    symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(\n        target,\n        key,\n        Object.getOwnPropertyDescriptor(source, key));\n\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true });\n\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst crypto = require(\"crypto\");\n\nconst fs = require(\"fs\");\n\nconst inlineRequiresPlugin = require(\"babel-preset-fbjs/plugins/inline-requires\");\n\nconst makeHMRConfig = require(\"metro-react-native-babel-preset/src/configs/hmr\");\n\nconst nullthrows = require(\"nullthrows\");\n\nconst path = require(\"path\");\n\nconst _require = require(\"@babel/core\"),\nparseSync = _require.parseSync,\ntransformFromAstSync = _require.transformFromAstSync;\n\nconst _require2 = require(\"metro-source-map\"),\ngenerateFunctionMap = _require2.generateFunctionMap;\n\nconst cacheKeyParts = [\nfs.readFileSync(__filename),\nrequire(\"babel-preset-fbjs/package.json\").version];\n\n/**\n * Return a memoized function that checks for the existence of a\n * project level .babelrc file, and if it doesn't exist, reads the\n * default RN babelrc file and uses that.\n */\n\nconst getBabelRC = function () {\n  let babelRC = null;\n  return function _getBabelRC(_ref) {\n    let projectRoot = _ref.projectRoot,\n    extendsBabelConfigPath = _ref.extendsBabelConfigPath,\n    options = _objectWithoutProperties(_ref, [\n    \"projectRoot\",\n    \"extendsBabelConfigPath\"]);\n\n\n    if (babelRC != null) {\n      return babelRC;\n    }\n\n    babelRC = {\n      plugins: [],\n      extends: extendsBabelConfigPath };\n\n\n    if (extendsBabelConfigPath) {\n      return babelRC;\n    } // Let's look for a babel config file in the project root.\n\n    let projectBabelRCPath; // .babelrc\n\n    if (projectRoot) {\n      projectBabelRCPath = path.resolve(projectRoot, \".babelrc\");\n    }\n\n    if (projectBabelRCPath) {\n      // .babelrc.js\n      if (!fs.existsSync(projectBabelRCPath)) {\n        projectBabelRCPath = path.resolve(projectRoot, \".babelrc.js\");\n      } // babel.config.js\n\n      if (!fs.existsSync(projectBabelRCPath)) {\n        projectBabelRCPath = path.resolve(projectRoot, \"babel.config.js\");\n      } // If we found a babel config file, extend our config off of it\n      // otherwise the default config will be used\n\n      if (fs.existsSync(projectBabelRCPath)) {\n        babelRC.extends = projectBabelRCPath;\n      }\n    } // If a babel config file doesn't exist in the project then\n    // the default preset for react-native will be used instead.\n\n    if (!babelRC.extends) {\n      const experimentalImportSupport = options.experimentalImportSupport,\n      presetOptions = _objectWithoutProperties(options, [\n      \"experimentalImportSupport\"]);\n\n\n      babelRC.presets = [\n      [\n      require(\"metro-react-native-babel-preset\"),\n      /* $FlowFixMe(>=0.122.0 site=react_native_fb) This comment suppresses\n       * an error found when Flow v0.122.0 was deployed. To see the error,\n       * delete this comment and run Flow. */\n      _objectSpread(\n      _objectSpread(\n      {\n        projectRoot },\n\n      presetOptions),\n\n      {},\n      {\n        disableImportExportTransform: experimentalImportSupport,\n        enableBabelRuntime: options.enableBabelRuntime })]];\n\n\n\n\n    }\n\n    return babelRC;\n  };\n}();\n/**\n * Given a filename and options, build a Babel\n * config object with the appropriate plugins.\n */\n\nfunction buildBabelConfig(filename, options) {\n  let plugins =\n  arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  const babelRC = getBabelRC(options);\n  const extraConfig = {\n    babelrc:\n    typeof options.enableBabelRCLookup === \"boolean\" ?\n    options.enableBabelRCLookup :\n    true,\n    code: false,\n    filename,\n    highlightCode: true };\n\n\n  let config = _objectSpread(_objectSpread({}, babelRC), extraConfig); // Add extra plugins\n\n  const extraPlugins = [];\n\n  if (options.inlineRequires) {\n    extraPlugins.push(inlineRequiresPlugin);\n  }\n\n  const withExtrPlugins = config.plugins = extraPlugins.concat(\n  config.plugins,\n  plugins);\n\n\n  if (options.dev && options.hot) {\n    // Note: this intentionally doesn't include the path separator because\n    // I'm not sure which one it should use on Windows, and false positives\n    // are unlikely anyway. If you later decide to include the separator,\n    // don't forget that the string usually *starts* with \"node_modules\" so\n    // the first one often won't be there.\n    const mayContainEditableReactComponents =\n    filename.indexOf(\"node_modules\") === -1;\n\n    if (mayContainEditableReactComponents) {\n      const hmrConfig = makeHMRConfig();\n      hmrConfig.plugins = withExtrPlugins.concat(hmrConfig.plugins);\n      config = Object.assign({}, config, hmrConfig);\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, babelRC), config);\n}\n\nfunction transform(_ref2) {\n  let filename = _ref2.filename,\n  options = _ref2.options,\n  src = _ref2.src,\n  plugins = _ref2.plugins;\n  const OLD_BABEL_ENV = process.env.BABEL_ENV;\n  process.env.BABEL_ENV = options.dev ?\n  \"development\" :\n  process.env.BABEL_ENV || \"production\";\n\n  try {\n    const babelConfig = _objectSpread(\n    _objectSpread(\n    {\n      // ES modules require sourceType='module' but OSS may not always want that\n      sourceType: \"unambiguous\" },\n\n    buildBabelConfig(filename, options, plugins)),\n\n    {},\n    {\n      caller: {\n        name: \"metro\",\n        bundler: \"metro\",\n        platform: options.platform },\n\n      ast: true });\n\n\n\n    const sourceAst = parseSync(src, babelConfig);\n    /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.111 was deployed. To see the error, delete this\n     * comment and run Flow. */\n\n    const result = transformFromAstSync(sourceAst, src, babelConfig);\n    const functionMap = generateFunctionMap(sourceAst, {\n      filename });\n    // The result from `transformFromAstSync` can be null (if the file is ignored)\n\n    if (!result) {\n      /* $FlowFixMe BabelTransformer specifies that the `ast` can never be null but\n       * the function returns here. Discovered when typing `BabelNode`. */\n      return {\n        ast: null,\n        functionMap };\n\n    }\n\n    return {\n      ast: nullthrows(result.ast),\n      functionMap };\n\n  } finally {\n    if (OLD_BABEL_ENV) {\n      process.env.BABEL_ENV = OLD_BABEL_ENV;\n    }\n  }\n}\n\nfunction getCacheKey() {\n  var key = crypto.createHash(\"md5\");\n  cacheKeyParts.forEach((part) => key.update(part));\n  return key.digest(\"hex\");\n}\n\nmodule.exports = {\n  transform,\n  getCacheKey };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null},"mtime":1649858306594},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/configs/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/configs/hmr.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\"use strict\";\n\nmodule.exports = function () {\n  return {\n    plugins: [require(\"react-refresh/babel\")] };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhtci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicGx1Z2lucyIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFlBQVc7QUFDMUIsU0FBTztBQUNMQyxJQUFBQSxPQUFPLEVBQUUsQ0FBQ0MsT0FBTyxDQUFDLHFCQUFELENBQVIsQ0FESixFQUFQOztBQUdELENBSkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2RldmluL1NFMzE5L3F1ZXN0bGlmZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvbWV0cm8tcmVhY3QtbmF0aXZlLWJhYmVsLXByZXNldC9zcmMvY29uZmlncy8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgcGx1Z2luczogW3JlcXVpcmUoXCJyZWFjdC1yZWZyZXNoL2JhYmVsXCIpXVxuICB9O1xufTtcbiJdfQ==","map":null},"mtime":1649858306492},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/source-map.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n    args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nconst Consumer = require(\"./Consumer\");\n\nconst Generator = require(\"./Generator\");\n\nconst SourceMap = require(\"source-map\"); // We need to export this for `metro-symbolicate`\n\nconst normalizeSourcePath = require(\"./Consumer/normalizeSourcePath\");\n\nconst composeSourceMaps = require(\"./composeSourceMaps\");\n\nconst _require = require(\"./BundleBuilder\"),\ncreateIndexMap = _require.createIndexMap,\nBundleBuilder = _require.BundleBuilder;\n\nconst _require2 = require(\"./generateFunctionMap\"),\ngenerateFunctionMap = _require2.generateFunctionMap;\n\nfunction fromRawMappingsImpl(isBlocking, onDone, modules, offsetLines) {\n  const modulesToProcess = modules.slice();\n  const generator = new Generator();\n  let carryOver = offsetLines;\n\n  function processNextModule() {\n    if (modulesToProcess.length === 0) {\n      return true;\n    }\n\n    const mod = modulesToProcess.shift();\n    const code = mod.code,\n    map = mod.map;\n\n    if (Array.isArray(map)) {\n      addMappingsForFile(generator, map, mod, carryOver);\n    } else if (map != null) {\n      throw new Error(\n      `Unexpected module with full source map found: ${mod.path}`);\n\n    }\n\n    carryOver = carryOver + countLines(code);\n    return false;\n  }\n\n  function workLoop() {\n    const time = process.hrtime();\n\n    while (true) {\n      const isDone = processNextModule();\n\n      if (isDone) {\n        onDone(generator);\n        break;\n      }\n\n      if (!isBlocking) {\n        // Keep the loop running but try to avoid blocking\n        // for too long because this is not in a worker yet.\n        const diff = process.hrtime(time);\n        const NS_IN_MS = 1000000;\n\n        if (diff[1] > 50 * NS_IN_MS) {\n          // We've blocked for more than 50ms.\n          // This code currently runs on the main thread,\n          // so let's give Metro an opportunity to handle requests.\n          setImmediate(workLoop);\n          break;\n        }\n      }\n    }\n  }\n\n  workLoop();\n}\n/**\n * Creates a source map from modules with \"raw mappings\", i.e. an array of\n * tuples with either 2, 4, or 5 elements:\n * generated line, generated column, source line, source line, symbol name.\n * Accepts an `offsetLines` argument in case modules' code is to be offset in\n * the resulting bundle, e.g. by some prefix code.\n */\n\nfunction fromRawMappings(modules) {\n  let offsetLines =\n  arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let generator;\n  fromRawMappingsImpl(\n  true,\n  (g) => {\n    generator = g;\n  },\n  modules,\n  offsetLines);\n\n\n  if (generator == null) {\n    throw new Error(\"Expected fromRawMappingsImpl() to finish synchronously.\");\n  }\n\n  return generator;\n}\n\nfunction fromRawMappingsNonBlocking(_x) {\n  return _fromRawMappingsNonBlocking.apply(this, arguments);\n}\n/**\n * Transforms a standard source map object into a Raw Mappings object, to be\n * used across the bundler.\n */\n\nfunction _fromRawMappingsNonBlocking() {\n  _fromRawMappingsNonBlocking = _asyncToGenerator(function* (modules) {\n    let offsetLines =\n    arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return new Promise((resolve) => {\n      fromRawMappingsImpl(false, resolve, modules, offsetLines);\n    });\n  });\n  return _fromRawMappingsNonBlocking.apply(this, arguments);\n}\n\nfunction toBabelSegments(sourceMap) {\n  const rawMappings = [];\n  new SourceMap.SourceMapConsumer(sourceMap).eachMapping((map) => {\n    rawMappings.push({\n      generated: {\n        line: map.generatedLine,\n        column: map.generatedColumn },\n\n      original: {\n        line: map.originalLine,\n        column: map.originalColumn },\n\n      source: map.source,\n      name: map.name });\n\n  });\n  return rawMappings;\n}\n\nfunction toSegmentTuple(mapping) {\n  const _mapping$generated = mapping.generated,\n  column = _mapping$generated.column,\n  line = _mapping$generated.line;\n  const name = mapping.name,\n  original = mapping.original;\n\n  if (original == null) {\n    return [line, column];\n  }\n\n  if (typeof name !== \"string\") {\n    return [line, column, original.line, original.column];\n  }\n\n  return [line, column, original.line, original.column, name];\n}\n\nfunction addMappingsForFile(generator, mappings, module, carryOver) {\n  generator.startFile(module.path, module.source, module.functionMap);\n\n  for (let i = 0, n = mappings.length; i < n; ++i) {\n    addMapping(generator, mappings[i], carryOver);\n  }\n\n  generator.endFile();\n}\n\nfunction addMapping(generator, mapping, carryOver) {\n  const n = mapping.length;\n  const line = mapping[0] + carryOver; // lines start at 1, columns start at 0\n\n  const column = mapping[1];\n\n  if (n === 2) {\n    generator.addSimpleMapping(line, column);\n  } else if (n === 4) {\n    const sourceMap = mapping;\n    generator.addSourceMapping(line, column, sourceMap[2], sourceMap[3]);\n  } else if (n === 5) {\n    const sourceMap = mapping;\n    generator.addNamedSourceMapping(\n    line,\n    column,\n    sourceMap[2],\n    sourceMap[3],\n    sourceMap[4]);\n\n  } else {\n    throw new Error(`Invalid mapping: [${mapping.join(\", \")}]`);\n  }\n}\n\nfunction countLines(string) {\n  return string.split(\"\\n\").length;\n}\n\nmodule.exports = {\n  BundleBuilder,\n  composeSourceMaps,\n  Consumer,\n  createIndexMap,\n  generateFunctionMap,\n  fromRawMappings,\n  fromRawMappingsNonBlocking,\n  normalizeSourcePath,\n  toBabelSegments,\n  toSegmentTuple };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null},"mtime":1650027887080},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/index.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\"; // Implements an API-compatible subset of source-map's `SourceMapConsumer`.\n\nconst DelegatingConsumer = require(\"./DelegatingConsumer\");\n\nmodule.exports = DelegatingConsumer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkRlbGVnYXRpbmdDb25zdW1lciIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhLENBQWM7O0FBRWQsTUFBTUEsa0JBQWtCLEdBQUdDLE9BQU8sQ0FBQyxzQkFBRCxDQUFsQzs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxrQkFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2RldmluL1NFMzE5L3F1ZXN0bGlmZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL25vZGVfbW9kdWxlcy9tZXRyby1zb3VyY2UtbWFwL3NyYy9Db25zdW1lci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqXG4gKiBAZm9ybWF0XG4gKi9cblwidXNlIHN0cmljdFwiOyAvLyBJbXBsZW1lbnRzIGFuIEFQSS1jb21wYXRpYmxlIHN1YnNldCBvZiBzb3VyY2UtbWFwJ3MgYFNvdXJjZU1hcENvbnN1bWVyYC5cblxuY29uc3QgRGVsZWdhdGluZ0NvbnN1bWVyID0gcmVxdWlyZShcIi4vRGVsZWdhdGluZ0NvbnN1bWVyXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERlbGVnYXRpbmdDb25zdW1lcjtcbiJdfQ==","map":null},"mtime":1650027887056},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/DelegatingConsumer.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true });\n\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst createConsumer = require(\"./createConsumer\");\n\nconst _require = require(\"./constants\"),\nGENERATED_ORDER = _require.GENERATED_ORDER,\nORIGINAL_ORDER = _require.ORIGINAL_ORDER,\nGREATEST_LOWER_BOUND = _require.GREATEST_LOWER_BOUND,\nLEAST_UPPER_BOUND = _require.LEAST_UPPER_BOUND;\n/**\n * A source map consumer that supports both \"basic\" and \"indexed\" source maps.\n * Uses `MappingsConsumer` and `SectionsConsumer` under the hood (via\n * `createConsumer`).\n */\n\nclass DelegatingConsumer {\n  constructor(sourceMap) {\n    this._rootConsumer = createConsumer(sourceMap);\n    return this._rootConsumer;\n  }\n\n  originalPositionFor(generatedPosition) {\n    return this._rootConsumer.originalPositionFor(generatedPosition);\n  }\n\n  generatedMappings() {\n    return this._rootConsumer.generatedMappings();\n  }\n\n  eachMapping(callback, context, order) {\n    return this._rootConsumer.eachMapping(callback, context, order);\n  } // flowlint-next-line unsafe-getters-setters:off\n\n  get file() {\n    return this._rootConsumer.file;\n  }\n\n  sourceContentFor(source, nullOnMissing) {\n    return this._rootConsumer.sourceContentFor(source, nullOnMissing);\n  }}\n\n\n_defineProperty(DelegatingConsumer, \"GENERATED_ORDER\", GENERATED_ORDER);\n\n_defineProperty(DelegatingConsumer, \"ORIGINAL_ORDER\", ORIGINAL_ORDER);\n\n_defineProperty(\nDelegatingConsumer,\n\"GREATEST_LOWER_BOUND\",\nGREATEST_LOWER_BOUND);\n\n\n_defineProperty(DelegatingConsumer, \"LEAST_UPPER_BOUND\", LEAST_UPPER_BOUND);\n\nmodule.exports = DelegatingConsumer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlbGVnYXRpbmdDb25zdW1lci5qcyJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiY3JlYXRlQ29uc3VtZXIiLCJyZXF1aXJlIiwiX3JlcXVpcmUiLCJHRU5FUkFURURfT1JERVIiLCJPUklHSU5BTF9PUkRFUiIsIkdSRUFURVNUX0xPV0VSX0JPVU5EIiwiTEVBU1RfVVBQRVJfQk9VTkQiLCJEZWxlZ2F0aW5nQ29uc3VtZXIiLCJjb25zdHJ1Y3RvciIsInNvdXJjZU1hcCIsIl9yb290Q29uc3VtZXIiLCJvcmlnaW5hbFBvc2l0aW9uRm9yIiwiZ2VuZXJhdGVkUG9zaXRpb24iLCJnZW5lcmF0ZWRNYXBwaW5ncyIsImVhY2hNYXBwaW5nIiwiY2FsbGJhY2siLCJjb250ZXh0Iiwib3JkZXIiLCJmaWxlIiwic291cmNlQ29udGVudEZvciIsInNvdXJjZSIsIm51bGxPbk1pc3NpbmciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxlQUFULENBQXlCQyxHQUF6QixFQUE4QkMsR0FBOUIsRUFBbUNDLEtBQW5DLEVBQTBDO0FBQ3hDLE1BQUlELEdBQUcsSUFBSUQsR0FBWCxFQUFnQjtBQUNkRyxJQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JKLEdBQXRCLEVBQTJCQyxHQUEzQixFQUFnQztBQUM5QkMsTUFBQUEsS0FBSyxFQUFFQSxLQUR1QjtBQUU5QkcsTUFBQUEsVUFBVSxFQUFFLElBRmtCO0FBRzlCQyxNQUFBQSxZQUFZLEVBQUUsSUFIZ0I7QUFJOUJDLE1BQUFBLFFBQVEsRUFBRSxJQUpvQixFQUFoQzs7QUFNRCxHQVBELE1BT087QUFDTFAsSUFBQUEsR0FBRyxDQUFDQyxHQUFELENBQUgsR0FBV0MsS0FBWDtBQUNEOztBQUVELFNBQU9GLEdBQVA7QUFDRDs7QUFFRCxNQUFNUSxjQUFjLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUE5Qjs7QUFFQSxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxhQUFELENBQXhCO0FBQ0VFLGVBQWUsR0FBR0QsUUFBUSxDQUFDQyxlQUQ3QjtBQUVFQyxjQUFjLEdBQUdGLFFBQVEsQ0FBQ0UsY0FGNUI7QUFHRUMsb0JBQW9CLEdBQUdILFFBQVEsQ0FBQ0csb0JBSGxDO0FBSUVDLGlCQUFpQixHQUFHSixRQUFRLENBQUNJLGlCQUovQjtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTUMsa0JBQU4sQ0FBeUI7QUFDdkJDLEVBQUFBLFdBQVcsQ0FBQ0MsU0FBRCxFQUFZO0FBQ3JCLFNBQUtDLGFBQUwsR0FBcUJWLGNBQWMsQ0FBQ1MsU0FBRCxDQUFuQztBQUNBLFdBQU8sS0FBS0MsYUFBWjtBQUNEOztBQUVEQyxFQUFBQSxtQkFBbUIsQ0FBQ0MsaUJBQUQsRUFBb0I7QUFDckMsV0FBTyxLQUFLRixhQUFMLENBQW1CQyxtQkFBbkIsQ0FBdUNDLGlCQUF2QyxDQUFQO0FBQ0Q7O0FBRURDLEVBQUFBLGlCQUFpQixHQUFHO0FBQ2xCLFdBQU8sS0FBS0gsYUFBTCxDQUFtQkcsaUJBQW5CLEVBQVA7QUFDRDs7QUFFREMsRUFBQUEsV0FBVyxDQUFDQyxRQUFELEVBQVdDLE9BQVgsRUFBb0JDLEtBQXBCLEVBQTJCO0FBQ3BDLFdBQU8sS0FBS1AsYUFBTCxDQUFtQkksV0FBbkIsQ0FBK0JDLFFBQS9CLEVBQXlDQyxPQUF6QyxFQUFrREMsS0FBbEQsQ0FBUDtBQUNELEdBaEJzQixDQWdCckI7O0FBRU0sTUFBSkMsSUFBSSxHQUFHO0FBQ1QsV0FBTyxLQUFLUixhQUFMLENBQW1CUSxJQUExQjtBQUNEOztBQUVEQyxFQUFBQSxnQkFBZ0IsQ0FBQ0MsTUFBRCxFQUFTQyxhQUFULEVBQXdCO0FBQ3RDLFdBQU8sS0FBS1gsYUFBTCxDQUFtQlMsZ0JBQW5CLENBQW9DQyxNQUFwQyxFQUE0Q0MsYUFBNUMsQ0FBUDtBQUNELEdBeEJzQjs7O0FBMkJ6QjlCLGVBQWUsQ0FBQ2dCLGtCQUFELEVBQXFCLGlCQUFyQixFQUF3Q0osZUFBeEMsQ0FBZjs7QUFFQVosZUFBZSxDQUFDZ0Isa0JBQUQsRUFBcUIsZ0JBQXJCLEVBQXVDSCxjQUF2QyxDQUFmOztBQUVBYixlQUFlO0FBQ2JnQixrQkFEYTtBQUViLHNCQUZhO0FBR2JGLG9CQUhhLENBQWY7OztBQU1BZCxlQUFlLENBQUNnQixrQkFBRCxFQUFxQixtQkFBckIsRUFBMENELGlCQUExQyxDQUFmOztBQUVBZ0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsa0JBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZXZpbi9TRTMxOS9xdWVzdGxpZmUvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9ub2RlX21vZHVsZXMvbWV0cm8tc291cmNlLW1hcC9zcmMvQ29uc3VtZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKlxuICogQGZvcm1hdFxuICovXG5cInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmNvbnN0IGNyZWF0ZUNvbnN1bWVyID0gcmVxdWlyZShcIi4vY3JlYXRlQ29uc3VtZXJcIik7XG5cbmNvbnN0IF9yZXF1aXJlID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLFxuICBHRU5FUkFURURfT1JERVIgPSBfcmVxdWlyZS5HRU5FUkFURURfT1JERVIsXG4gIE9SSUdJTkFMX09SREVSID0gX3JlcXVpcmUuT1JJR0lOQUxfT1JERVIsXG4gIEdSRUFURVNUX0xPV0VSX0JPVU5EID0gX3JlcXVpcmUuR1JFQVRFU1RfTE9XRVJfQk9VTkQsXG4gIExFQVNUX1VQUEVSX0JPVU5EID0gX3JlcXVpcmUuTEVBU1RfVVBQRVJfQk9VTkQ7XG4vKipcbiAqIEEgc291cmNlIG1hcCBjb25zdW1lciB0aGF0IHN1cHBvcnRzIGJvdGggXCJiYXNpY1wiIGFuZCBcImluZGV4ZWRcIiBzb3VyY2UgbWFwcy5cbiAqIFVzZXMgYE1hcHBpbmdzQ29uc3VtZXJgIGFuZCBgU2VjdGlvbnNDb25zdW1lcmAgdW5kZXIgdGhlIGhvb2QgKHZpYVxuICogYGNyZWF0ZUNvbnN1bWVyYCkuXG4gKi9cblxuY2xhc3MgRGVsZWdhdGluZ0NvbnN1bWVyIHtcbiAgY29uc3RydWN0b3Ioc291cmNlTWFwKSB7XG4gICAgdGhpcy5fcm9vdENvbnN1bWVyID0gY3JlYXRlQ29uc3VtZXIoc291cmNlTWFwKTtcbiAgICByZXR1cm4gdGhpcy5fcm9vdENvbnN1bWVyO1xuICB9XG5cbiAgb3JpZ2luYWxQb3NpdGlvbkZvcihnZW5lcmF0ZWRQb3NpdGlvbikge1xuICAgIHJldHVybiB0aGlzLl9yb290Q29uc3VtZXIub3JpZ2luYWxQb3NpdGlvbkZvcihnZW5lcmF0ZWRQb3NpdGlvbik7XG4gIH1cblxuICBnZW5lcmF0ZWRNYXBwaW5ncygpIHtcbiAgICByZXR1cm4gdGhpcy5fcm9vdENvbnN1bWVyLmdlbmVyYXRlZE1hcHBpbmdzKCk7XG4gIH1cblxuICBlYWNoTWFwcGluZyhjYWxsYmFjaywgY29udGV4dCwgb3JkZXIpIHtcbiAgICByZXR1cm4gdGhpcy5fcm9vdENvbnN1bWVyLmVhY2hNYXBwaW5nKGNhbGxiYWNrLCBjb250ZXh0LCBvcmRlcik7XG4gIH0gLy8gZmxvd2xpbnQtbmV4dC1saW5lIHVuc2FmZS1nZXR0ZXJzLXNldHRlcnM6b2ZmXG5cbiAgZ2V0IGZpbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Jvb3RDb25zdW1lci5maWxlO1xuICB9XG5cbiAgc291cmNlQ29udGVudEZvcihzb3VyY2UsIG51bGxPbk1pc3NpbmcpIHtcbiAgICByZXR1cm4gdGhpcy5fcm9vdENvbnN1bWVyLnNvdXJjZUNvbnRlbnRGb3Ioc291cmNlLCBudWxsT25NaXNzaW5nKTtcbiAgfVxufVxuXG5fZGVmaW5lUHJvcGVydHkoRGVsZWdhdGluZ0NvbnN1bWVyLCBcIkdFTkVSQVRFRF9PUkRFUlwiLCBHRU5FUkFURURfT1JERVIpO1xuXG5fZGVmaW5lUHJvcGVydHkoRGVsZWdhdGluZ0NvbnN1bWVyLCBcIk9SSUdJTkFMX09SREVSXCIsIE9SSUdJTkFMX09SREVSKTtcblxuX2RlZmluZVByb3BlcnR5KFxuICBEZWxlZ2F0aW5nQ29uc3VtZXIsXG4gIFwiR1JFQVRFU1RfTE9XRVJfQk9VTkRcIixcbiAgR1JFQVRFU1RfTE9XRVJfQk9VTkRcbik7XG5cbl9kZWZpbmVQcm9wZXJ0eShEZWxlZ2F0aW5nQ29uc3VtZXIsIFwiTEVBU1RfVVBQRVJfQk9VTkRcIiwgTEVBU1RfVVBQRVJfQk9VTkQpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IERlbGVnYXRpbmdDb25zdW1lcjtcbiJdfQ==","map":null},"mtime":1650027887042},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/createConsumer.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst invariant = require(\"invariant\");\n\nfunction createConsumer(sourceMap) {\n  invariant(\n  sourceMap.version === \"3\" || sourceMap.version === 3,\n  `Unrecognized source map format version: ${sourceMap.version}`);\n\n\n  const MappingsConsumer = require(\"./MappingsConsumer\");\n\n  const SectionsConsumer = require(\"./SectionsConsumer\"); // eslint-disable-next-line lint/strictly-null\n\n  if (sourceMap.mappings === undefined) {\n    return new SectionsConsumer(sourceMap);\n  }\n\n  return new MappingsConsumer(sourceMap);\n}\n\nmodule.exports = createConsumer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUNvbnN1bWVyLmpzIl0sIm5hbWVzIjpbImludmFyaWFudCIsInJlcXVpcmUiLCJjcmVhdGVDb25zdW1lciIsInNvdXJjZU1hcCIsInZlcnNpb24iLCJNYXBwaW5nc0NvbnN1bWVyIiwiU2VjdGlvbnNDb25zdW1lciIsIm1hcHBpbmdzIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFFQSxTQUFTQyxjQUFULENBQXdCQyxTQUF4QixFQUFtQztBQUNqQ0gsRUFBQUEsU0FBUztBQUNQRyxFQUFBQSxTQUFTLENBQUNDLE9BQVYsS0FBc0IsR0FBdEIsSUFBNkJELFNBQVMsQ0FBQ0MsT0FBVixLQUFzQixDQUQ1QztBQUVOLDZDQUEwQ0QsU0FBUyxDQUFDQyxPQUFRLEVBRnRELENBQVQ7OztBQUtBLFFBQU1DLGdCQUFnQixHQUFHSixPQUFPLENBQUMsb0JBQUQsQ0FBaEM7O0FBRUEsUUFBTUssZ0JBQWdCLEdBQUdMLE9BQU8sQ0FBQyxvQkFBRCxDQUFoQyxDQVJpQyxDQVF1Qjs7QUFFeEQsTUFBSUUsU0FBUyxDQUFDSSxRQUFWLEtBQXVCQyxTQUEzQixFQUFzQztBQUNwQyxXQUFPLElBQUlGLGdCQUFKLENBQXFCSCxTQUFyQixDQUFQO0FBQ0Q7O0FBRUQsU0FBTyxJQUFJRSxnQkFBSixDQUFxQkYsU0FBckIsQ0FBUDtBQUNEOztBQUVETSxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLGNBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZXZpbi9TRTMxOS9xdWVzdGxpZmUvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9ub2RlX21vZHVsZXMvbWV0cm8tc291cmNlLW1hcC9zcmMvQ29uc3VtZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKlxuICogQGZvcm1hdFxuICovXG5cInVzZSBzdHJpY3RcIjtcblxuY29uc3QgaW52YXJpYW50ID0gcmVxdWlyZShcImludmFyaWFudFwiKTtcblxuZnVuY3Rpb24gY3JlYXRlQ29uc3VtZXIoc291cmNlTWFwKSB7XG4gIGludmFyaWFudChcbiAgICBzb3VyY2VNYXAudmVyc2lvbiA9PT0gXCIzXCIgfHwgc291cmNlTWFwLnZlcnNpb24gPT09IDMsXG4gICAgYFVucmVjb2duaXplZCBzb3VyY2UgbWFwIGZvcm1hdCB2ZXJzaW9uOiAke3NvdXJjZU1hcC52ZXJzaW9ufWBcbiAgKTtcblxuICBjb25zdCBNYXBwaW5nc0NvbnN1bWVyID0gcmVxdWlyZShcIi4vTWFwcGluZ3NDb25zdW1lclwiKTtcblxuICBjb25zdCBTZWN0aW9uc0NvbnN1bWVyID0gcmVxdWlyZShcIi4vU2VjdGlvbnNDb25zdW1lclwiKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGxpbnQvc3RyaWN0bHktbnVsbFxuXG4gIGlmIChzb3VyY2VNYXAubWFwcGluZ3MgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBuZXcgU2VjdGlvbnNDb25zdW1lcihzb3VyY2VNYXApO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBNYXBwaW5nc0NvbnN1bWVyKHNvdXJjZU1hcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlQ29uc3VtZXI7XG4iXX0=","map":null},"mtime":1650027887024},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/constants.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst _require = require(\"ob1\"),\nadd0 = _require.add0,\nadd1 = _require.add1;\n\nconst FIRST_COLUMN = add0(0);\nconst FIRST_LINE = add1(0);\nconst GENERATED_ORDER = \"GENERATED_ORDER\";\nconst ORIGINAL_ORDER = \"ORIGINAL_ORDER\";\nconst GREATEST_LOWER_BOUND = \"GREATEST_LOWER_BOUND\";\nconst LEAST_UPPER_BOUND = \"LEAST_UPPER_BOUND\";\nconst EMPTY_POSITION = Object.freeze({\n  source: null,\n  name: null,\n  line: null,\n  column: null });\n\n\nfunction iterationOrderToString(x) {\n  return x;\n}\n\nfunction lookupBiasToString(x) {\n  return x;\n}\n\nmodule.exports = {\n  FIRST_COLUMN,\n  FIRST_LINE,\n  GENERATED_ORDER,\n  ORIGINAL_ORDER,\n  GREATEST_LOWER_BOUND,\n  LEAST_UPPER_BOUND,\n  EMPTY_POSITION,\n  iterationOrderToString,\n  lookupBiasToString };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJfcmVxdWlyZSIsInJlcXVpcmUiLCJhZGQwIiwiYWRkMSIsIkZJUlNUX0NPTFVNTiIsIkZJUlNUX0xJTkUiLCJHRU5FUkFURURfT1JERVIiLCJPUklHSU5BTF9PUkRFUiIsIkdSRUFURVNUX0xPV0VSX0JPVU5EIiwiTEVBU1RfVVBQRVJfQk9VTkQiLCJFTVBUWV9QT1NJVElPTiIsIk9iamVjdCIsImZyZWV6ZSIsInNvdXJjZSIsIm5hbWUiLCJsaW5lIiwiY29sdW1uIiwiaXRlcmF0aW9uT3JkZXJUb1N0cmluZyIsIngiLCJsb29rdXBCaWFzVG9TdHJpbmciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxLQUFELENBQXhCO0FBQ0VDLElBQUksR0FBR0YsUUFBUSxDQUFDRSxJQURsQjtBQUVFQyxJQUFJLEdBQUdILFFBQVEsQ0FBQ0csSUFGbEI7O0FBSUEsTUFBTUMsWUFBWSxHQUFHRixJQUFJLENBQUMsQ0FBRCxDQUF6QjtBQUNBLE1BQU1HLFVBQVUsR0FBR0YsSUFBSSxDQUFDLENBQUQsQ0FBdkI7QUFDQSxNQUFNRyxlQUFlLEdBQUcsaUJBQXhCO0FBQ0EsTUFBTUMsY0FBYyxHQUFHLGdCQUF2QjtBQUNBLE1BQU1DLG9CQUFvQixHQUFHLHNCQUE3QjtBQUNBLE1BQU1DLGlCQUFpQixHQUFHLG1CQUExQjtBQUNBLE1BQU1DLGNBQWMsR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFDbkNDLEVBQUFBLE1BQU0sRUFBRSxJQUQyQjtBQUVuQ0MsRUFBQUEsSUFBSSxFQUFFLElBRjZCO0FBR25DQyxFQUFBQSxJQUFJLEVBQUUsSUFINkI7QUFJbkNDLEVBQUFBLE1BQU0sRUFBRSxJQUoyQixFQUFkLENBQXZCOzs7QUFPQSxTQUFTQyxzQkFBVCxDQUFnQ0MsQ0FBaEMsRUFBbUM7QUFDakMsU0FBT0EsQ0FBUDtBQUNEOztBQUVELFNBQVNDLGtCQUFULENBQTRCRCxDQUE1QixFQUErQjtBQUM3QixTQUFPQSxDQUFQO0FBQ0Q7O0FBRURFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmakIsRUFBQUEsWUFEZTtBQUVmQyxFQUFBQSxVQUZlO0FBR2ZDLEVBQUFBLGVBSGU7QUFJZkMsRUFBQUEsY0FKZTtBQUtmQyxFQUFBQSxvQkFMZTtBQU1mQyxFQUFBQSxpQkFOZTtBQU9mQyxFQUFBQSxjQVBlO0FBUWZPLEVBQUFBLHNCQVJlO0FBU2ZFLEVBQUFBLGtCQVRlLEVBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZXZpbi9TRTMxOS9xdWVzdGxpZmUvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9ub2RlX21vZHVsZXMvbWV0cm8tc291cmNlLW1hcC9zcmMvQ29uc3VtZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKlxuICogQGZvcm1hdFxuICovXG5cInVzZSBzdHJpY3RcIjtcblxuY29uc3QgX3JlcXVpcmUgPSByZXF1aXJlKFwib2IxXCIpLFxuICBhZGQwID0gX3JlcXVpcmUuYWRkMCxcbiAgYWRkMSA9IF9yZXF1aXJlLmFkZDE7XG5cbmNvbnN0IEZJUlNUX0NPTFVNTiA9IGFkZDAoMCk7XG5jb25zdCBGSVJTVF9MSU5FID0gYWRkMSgwKTtcbmNvbnN0IEdFTkVSQVRFRF9PUkRFUiA9IFwiR0VORVJBVEVEX09SREVSXCI7XG5jb25zdCBPUklHSU5BTF9PUkRFUiA9IFwiT1JJR0lOQUxfT1JERVJcIjtcbmNvbnN0IEdSRUFURVNUX0xPV0VSX0JPVU5EID0gXCJHUkVBVEVTVF9MT1dFUl9CT1VORFwiO1xuY29uc3QgTEVBU1RfVVBQRVJfQk9VTkQgPSBcIkxFQVNUX1VQUEVSX0JPVU5EXCI7XG5jb25zdCBFTVBUWV9QT1NJVElPTiA9IE9iamVjdC5mcmVlemUoe1xuICBzb3VyY2U6IG51bGwsXG4gIG5hbWU6IG51bGwsXG4gIGxpbmU6IG51bGwsXG4gIGNvbHVtbjogbnVsbFxufSk7XG5cbmZ1bmN0aW9uIGl0ZXJhdGlvbk9yZGVyVG9TdHJpbmcoeCkge1xuICByZXR1cm4geDtcbn1cblxuZnVuY3Rpb24gbG9va3VwQmlhc1RvU3RyaW5nKHgpIHtcbiAgcmV0dXJuIHg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBGSVJTVF9DT0xVTU4sXG4gIEZJUlNUX0xJTkUsXG4gIEdFTkVSQVRFRF9PUkRFUixcbiAgT1JJR0lOQUxfT1JERVIsXG4gIEdSRUFURVNUX0xPV0VSX0JPVU5ELFxuICBMRUFTVF9VUFBFUl9CT1VORCxcbiAgRU1QVFlfUE9TSVRJT04sXG4gIGl0ZXJhdGlvbk9yZGVyVG9TdHJpbmcsXG4gIGxvb2t1cEJpYXNUb1N0cmluZ1xufTtcbiJdfQ==","map":null},"mtime":1650027887022},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Generator.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly)\n    symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(\n        target,\n        key,\n        Object.getOwnPropertyDescriptor(source, key));\n\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true });\n\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst B64Builder = require(\"./B64Builder\");\n/**\n * Generates a source map from raw mappings.\n *\n * Raw mappings are a set of 2, 4, or five elements:\n *\n * - line and column number in the generated source\n * - line and column number in the original source\n * - symbol name in the original source\n *\n * Mappings have to be passed in the order appearance in the generated source.\n */\n\nclass Generator {\n  constructor() {\n    this.builder = new B64Builder();\n    this.last = {\n      generatedColumn: 0,\n      generatedLine: 1,\n      // lines are passed in 1-indexed\n      name: 0,\n      source: 0,\n      sourceColumn: 0,\n      sourceLine: 1 };\n\n    this.names = new IndexedSet();\n    this.source = -1;\n    this.sources = [];\n    this.sourcesContent = [];\n    this.x_facebook_sources = [];\n  }\n  /**\n   * Mark the beginning of a new source file.\n   */\n\n  startFile(file, code, functionMap) {\n    this.source = this.sources.push(file) - 1;\n    this.sourcesContent.push(code);\n    this.x_facebook_sources.push(functionMap ? [functionMap] : null);\n  }\n  /**\n   * Mark the end of the current source file\n   */\n\n  endFile() {\n    this.source = -1;\n  }\n  /**\n   * Adds a mapping for generated code without a corresponding source location.\n   */\n\n  addSimpleMapping(generatedLine, generatedColumn) {\n    const last = this.last;\n\n    if (\n    this.source === -1 ||\n    generatedLine === last.generatedLine &&\n    generatedColumn < last.generatedColumn ||\n    generatedLine < last.generatedLine)\n    {\n      const msg =\n      this.source === -1 ?\n      \"Cannot add mapping before starting a file with `addFile()`\" :\n      \"Mapping is for a position preceding an earlier mapping\";\n      throw new Error(msg);\n    }\n\n    if (generatedLine > last.generatedLine) {\n      this.builder.markLines(generatedLine - last.generatedLine);\n      last.generatedLine = generatedLine;\n      last.generatedColumn = 0;\n    }\n\n    this.builder.startSegment(generatedColumn - last.generatedColumn);\n    last.generatedColumn = generatedColumn;\n  }\n  /**\n   * Adds a mapping for generated code with a corresponding source location.\n   */\n\n  addSourceMapping(generatedLine, generatedColumn, sourceLine, sourceColumn) {\n    this.addSimpleMapping(generatedLine, generatedColumn);\n    const last = this.last;\n    this.builder.\n    append(this.source - last.source).\n    append(sourceLine - last.sourceLine).\n    append(sourceColumn - last.sourceColumn);\n    last.source = this.source;\n    last.sourceColumn = sourceColumn;\n    last.sourceLine = sourceLine;\n  }\n  /**\n   * Adds a mapping for code with a corresponding source location + symbol name.\n   */\n\n  addNamedSourceMapping(\n  generatedLine,\n  generatedColumn,\n  sourceLine,\n  sourceColumn,\n  name)\n  {\n    this.addSourceMapping(\n    generatedLine,\n    generatedColumn,\n    sourceLine,\n    sourceColumn);\n\n    const last = this.last;\n    const nameIndex = this.names.indexFor(name);\n    this.builder.append(nameIndex - last.name);\n    last.name = nameIndex;\n  }\n  /**\n   * Return the source map as object.\n   */\n\n  toMap(file, options) {\n    let content, sourcesMetadata;\n\n    if (options && options.excludeSource) {\n      content = {};\n    } else {\n      content = {\n        sourcesContent: this.sourcesContent.slice() };\n\n    }\n\n    if (this.hasSourcesMetadata()) {\n      sourcesMetadata = {\n        x_facebook_sources: JSON.parse(JSON.stringify(this.x_facebook_sources)) };\n\n    } else {\n      sourcesMetadata = {};\n    }\n    /* $FlowFixMe(>=0.111.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.111 was deployed. To see the error, delete this\n     * comment and run Flow. */\n\n    return _objectSpread(\n    _objectSpread(\n    _objectSpread(\n    {\n      version: 3,\n      file,\n      sources: this.sources.slice() },\n\n    content),\n\n    sourcesMetadata),\n\n    {},\n    {\n      names: this.names.items(),\n      mappings: this.builder.toString() });\n\n\n  }\n  /**\n   * Return the source map as string.\n   *\n   * This is ~2.5x faster than calling `JSON.stringify(generator.toMap())`\n   */\n\n  toString(file, options) {\n    let content, sourcesMetadata;\n\n    if (options && options.excludeSource) {\n      content = \"\";\n    } else {\n      content = `\"sourcesContent\":${JSON.stringify(this.sourcesContent)},`;\n    }\n\n    if (this.hasSourcesMetadata()) {\n      sourcesMetadata = `\"x_facebook_sources\":${JSON.stringify(\n      this.x_facebook_sources)\n      },`;\n    } else {\n      sourcesMetadata = \"\";\n    }\n\n    return (\n      \"{\" +\n      '\"version\":3,' + (\n      file ? `\"file\":${JSON.stringify(file)},` : \"\") +\n      `\"sources\":${JSON.stringify(this.sources)},` +\n      content +\n      sourcesMetadata +\n      `\"names\":${JSON.stringify(this.names.items())},` +\n      `\"mappings\":\"${this.builder.toString()}\"` +\n      \"}\");\n\n  }\n  /**\n   * Determine whether we need to write the `x_facebook_sources` field.\n   * If the metadata is all `null`s, we can omit the field entirely.\n   */\n\n  hasSourcesMetadata() {\n    return this.x_facebook_sources.some(\n    (metadata) => metadata != null && metadata.some((value) => value != null));\n\n  }}\n\n\nclass IndexedSet {\n  constructor() {\n    this.map = new Map();\n    this.nextIndex = 0;\n  }\n\n  indexFor(x) {\n    let index = this.map.get(x);\n\n    if (index == null) {\n      index = this.nextIndex++;\n      this.map.set(x, index);\n    }\n\n    return index;\n  }\n\n  items() {\n    return Array.from(this.map.keys());\n  }}\n\n\nmodule.exports = Generator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null},"mtime":1650027887053},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/B64Builder.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst encode = require(\"./encode\");\n\nconst MAX_SEGMENT_LENGTH = 7;\nconst ONE_MEG = 1024 * 1024;\nconst COMMA = 0x2c;\nconst SEMICOLON = 0x3b;\n/**\n * Efficient builder for base64 VLQ mappings strings.\n *\n * This class uses a buffer that is preallocated with one megabyte and is\n * reallocated dynamically as needed, doubling its size.\n *\n * Encoding never creates any complex value types (strings, objects), and only\n * writes character values to the buffer.\n *\n * For details about source map terminology and specification, check\n * https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n */\n\nclass B64Builder {\n  constructor() {\n    this.buffer = Buffer.alloc(ONE_MEG);\n    this.pos = 0;\n    this.hasSegment = false;\n  }\n  /**\n   * Adds `n` markers for generated lines to the mappings.\n   */\n\n  markLines(n) {\n    if (n < 1) {\n      return this;\n    }\n\n    this.hasSegment = false;\n\n    if (this.pos + n >= this.buffer.length) {\n      this._realloc();\n    }\n\n    while (n--) {\n      this.buffer[this.pos++] = SEMICOLON;\n    }\n\n    return this;\n  }\n  /**\n   * Starts a segment at the specified column offset in the current line.\n   */\n\n  startSegment(column) {\n    if (this.hasSegment) {\n      this._writeByte(COMMA);\n    } else {\n      this.hasSegment = true;\n    }\n\n    this.append(column);\n    return this;\n  }\n  /**\n   * Appends a single number to the mappings.\n   */\n\n  append(value) {\n    if (this.pos + MAX_SEGMENT_LENGTH >= this.buffer.length) {\n      this._realloc();\n    }\n\n    this.pos = encode(value, this.buffer, this.pos);\n    return this;\n  }\n  /**\n   * Returns the string representation of the mappings.\n   */\n\n  toString() {\n    return this.buffer.toString(\"ascii\", 0, this.pos);\n  }\n\n  _writeByte(byte) {\n    if (this.pos === this.buffer.length) {\n      this._realloc();\n    }\n\n    this.buffer[this.pos++] = byte;\n  }\n\n  _realloc() {\n    const buffer = this.buffer;\n    this.buffer = Buffer.alloc(buffer.length * 2);\n    buffer.copy(this.buffer);\n  }}\n\n\nmodule.exports = B64Builder;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkI2NEJ1aWxkZXIuanMiXSwibmFtZXMiOlsiZW5jb2RlIiwicmVxdWlyZSIsIk1BWF9TRUdNRU5UX0xFTkdUSCIsIk9ORV9NRUciLCJDT01NQSIsIlNFTUlDT0xPTiIsIkI2NEJ1aWxkZXIiLCJjb25zdHJ1Y3RvciIsImJ1ZmZlciIsIkJ1ZmZlciIsImFsbG9jIiwicG9zIiwiaGFzU2VnbWVudCIsIm1hcmtMaW5lcyIsIm4iLCJsZW5ndGgiLCJfcmVhbGxvYyIsInN0YXJ0U2VnbWVudCIsImNvbHVtbiIsIl93cml0ZUJ5dGUiLCJhcHBlbmQiLCJ2YWx1ZSIsInRvU3RyaW5nIiwiYnl0ZSIsImNvcHkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLE1BQU1DLGtCQUFrQixHQUFHLENBQTNCO0FBQ0EsTUFBTUMsT0FBTyxHQUFHLE9BQU8sSUFBdkI7QUFDQSxNQUFNQyxLQUFLLEdBQUcsSUFBZDtBQUNBLE1BQU1DLFNBQVMsR0FBRyxJQUFsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNQyxVQUFOLENBQWlCO0FBQ2ZDLEVBQUFBLFdBQVcsR0FBRztBQUNaLFNBQUtDLE1BQUwsR0FBY0MsTUFBTSxDQUFDQyxLQUFQLENBQWFQLE9BQWIsQ0FBZDtBQUNBLFNBQUtRLEdBQUwsR0FBVyxDQUFYO0FBQ0EsU0FBS0MsVUFBTCxHQUFrQixLQUFsQjtBQUNEO0FBQ0Q7QUFDRjtBQUNBOztBQUVFQyxFQUFBQSxTQUFTLENBQUNDLENBQUQsRUFBSTtBQUNYLFFBQUlBLENBQUMsR0FBRyxDQUFSLEVBQVc7QUFDVCxhQUFPLElBQVA7QUFDRDs7QUFFRCxTQUFLRixVQUFMLEdBQWtCLEtBQWxCOztBQUVBLFFBQUksS0FBS0QsR0FBTCxHQUFXRyxDQUFYLElBQWdCLEtBQUtOLE1BQUwsQ0FBWU8sTUFBaEMsRUFBd0M7QUFDdEMsV0FBS0MsUUFBTDtBQUNEOztBQUVELFdBQU9GLENBQUMsRUFBUixFQUFZO0FBQ1YsV0FBS04sTUFBTCxDQUFZLEtBQUtHLEdBQUwsRUFBWixJQUEwQk4sU0FBMUI7QUFDRDs7QUFFRCxXQUFPLElBQVA7QUFDRDtBQUNEO0FBQ0Y7QUFDQTs7QUFFRVksRUFBQUEsWUFBWSxDQUFDQyxNQUFELEVBQVM7QUFDbkIsUUFBSSxLQUFLTixVQUFULEVBQXFCO0FBQ25CLFdBQUtPLFVBQUwsQ0FBZ0JmLEtBQWhCO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsV0FBS1EsVUFBTCxHQUFrQixJQUFsQjtBQUNEOztBQUVELFNBQUtRLE1BQUwsQ0FBWUYsTUFBWjtBQUNBLFdBQU8sSUFBUDtBQUNEO0FBQ0Q7QUFDRjtBQUNBOztBQUVFRSxFQUFBQSxNQUFNLENBQUNDLEtBQUQsRUFBUTtBQUNaLFFBQUksS0FBS1YsR0FBTCxHQUFXVCxrQkFBWCxJQUFpQyxLQUFLTSxNQUFMLENBQVlPLE1BQWpELEVBQXlEO0FBQ3ZELFdBQUtDLFFBQUw7QUFDRDs7QUFFRCxTQUFLTCxHQUFMLEdBQVdYLE1BQU0sQ0FBQ3FCLEtBQUQsRUFBUSxLQUFLYixNQUFiLEVBQXFCLEtBQUtHLEdBQTFCLENBQWpCO0FBQ0EsV0FBTyxJQUFQO0FBQ0Q7QUFDRDtBQUNGO0FBQ0E7O0FBRUVXLEVBQUFBLFFBQVEsR0FBRztBQUNULFdBQU8sS0FBS2QsTUFBTCxDQUFZYyxRQUFaLENBQXFCLE9BQXJCLEVBQThCLENBQTlCLEVBQWlDLEtBQUtYLEdBQXRDLENBQVA7QUFDRDs7QUFFRFEsRUFBQUEsVUFBVSxDQUFDSSxJQUFELEVBQU87QUFDZixRQUFJLEtBQUtaLEdBQUwsS0FBYSxLQUFLSCxNQUFMLENBQVlPLE1BQTdCLEVBQXFDO0FBQ25DLFdBQUtDLFFBQUw7QUFDRDs7QUFFRCxTQUFLUixNQUFMLENBQVksS0FBS0csR0FBTCxFQUFaLElBQTBCWSxJQUExQjtBQUNEOztBQUVEUCxFQUFBQSxRQUFRLEdBQUc7QUFDVCxVQUFNUixNQUFNLEdBQUcsS0FBS0EsTUFBcEI7QUFDQSxTQUFLQSxNQUFMLEdBQWNDLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhRixNQUFNLENBQUNPLE1BQVAsR0FBZ0IsQ0FBN0IsQ0FBZDtBQUNBUCxJQUFBQSxNQUFNLENBQUNnQixJQUFQLENBQVksS0FBS2hCLE1BQWpCO0FBQ0QsR0F6RWM7OztBQTRFakJpQixNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixVQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGV2aW4vU0UzMTkvcXVlc3RsaWZlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbm9kZV9tb2R1bGVzL21ldHJvLXNvdXJjZS1tYXAvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICpcbiAqIEBmb3JtYXRcbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IGVuY29kZSA9IHJlcXVpcmUoXCIuL2VuY29kZVwiKTtcblxuY29uc3QgTUFYX1NFR01FTlRfTEVOR1RIID0gNztcbmNvbnN0IE9ORV9NRUcgPSAxMDI0ICogMTAyNDtcbmNvbnN0IENPTU1BID0gMHgyYztcbmNvbnN0IFNFTUlDT0xPTiA9IDB4M2I7XG4vKipcbiAqIEVmZmljaWVudCBidWlsZGVyIGZvciBiYXNlNjQgVkxRIG1hcHBpbmdzIHN0cmluZ3MuXG4gKlxuICogVGhpcyBjbGFzcyB1c2VzIGEgYnVmZmVyIHRoYXQgaXMgcHJlYWxsb2NhdGVkIHdpdGggb25lIG1lZ2FieXRlIGFuZCBpc1xuICogcmVhbGxvY2F0ZWQgZHluYW1pY2FsbHkgYXMgbmVlZGVkLCBkb3VibGluZyBpdHMgc2l6ZS5cbiAqXG4gKiBFbmNvZGluZyBuZXZlciBjcmVhdGVzIGFueSBjb21wbGV4IHZhbHVlIHR5cGVzIChzdHJpbmdzLCBvYmplY3RzKSwgYW5kIG9ubHlcbiAqIHdyaXRlcyBjaGFyYWN0ZXIgdmFsdWVzIHRvIHRoZSBidWZmZXIuXG4gKlxuICogRm9yIGRldGFpbHMgYWJvdXQgc291cmNlIG1hcCB0ZXJtaW5vbG9neSBhbmQgc3BlY2lmaWNhdGlvbiwgY2hlY2tcbiAqIGh0dHBzOi8vZG9jcy5nb29nbGUuY29tL2RvY3VtZW50L2QvMVUxUkdBZWhRd1J5cFVUb3ZGMUtSbHBpT0Z6ZTBiLV8yZ2M2ZkFIMEtZMGsvZWRpdFxuICovXG5cbmNsYXNzIEI2NEJ1aWxkZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmJ1ZmZlciA9IEJ1ZmZlci5hbGxvYyhPTkVfTUVHKTtcbiAgICB0aGlzLnBvcyA9IDA7XG4gICAgdGhpcy5oYXNTZWdtZW50ID0gZmFsc2U7XG4gIH1cbiAgLyoqXG4gICAqIEFkZHMgYG5gIG1hcmtlcnMgZm9yIGdlbmVyYXRlZCBsaW5lcyB0byB0aGUgbWFwcGluZ3MuXG4gICAqL1xuXG4gIG1hcmtMaW5lcyhuKSB7XG4gICAgaWYgKG4gPCAxKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICB0aGlzLmhhc1NlZ21lbnQgPSBmYWxzZTtcblxuICAgIGlmICh0aGlzLnBvcyArIG4gPj0gdGhpcy5idWZmZXIubGVuZ3RoKSB7XG4gICAgICB0aGlzLl9yZWFsbG9jKCk7XG4gICAgfVxuXG4gICAgd2hpbGUgKG4tLSkge1xuICAgICAgdGhpcy5idWZmZXJbdGhpcy5wb3MrK10gPSBTRU1JQ09MT047XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIFN0YXJ0cyBhIHNlZ21lbnQgYXQgdGhlIHNwZWNpZmllZCBjb2x1bW4gb2Zmc2V0IGluIHRoZSBjdXJyZW50IGxpbmUuXG4gICAqL1xuXG4gIHN0YXJ0U2VnbWVudChjb2x1bW4pIHtcbiAgICBpZiAodGhpcy5oYXNTZWdtZW50KSB7XG4gICAgICB0aGlzLl93cml0ZUJ5dGUoQ09NTUEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmhhc1NlZ21lbnQgPSB0cnVlO1xuICAgIH1cblxuICAgIHRoaXMuYXBwZW5kKGNvbHVtbik7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgLyoqXG4gICAqIEFwcGVuZHMgYSBzaW5nbGUgbnVtYmVyIHRvIHRoZSBtYXBwaW5ncy5cbiAgICovXG5cbiAgYXBwZW5kKHZhbHVlKSB7XG4gICAgaWYgKHRoaXMucG9zICsgTUFYX1NFR01FTlRfTEVOR1RIID49IHRoaXMuYnVmZmVyLmxlbmd0aCkge1xuICAgICAgdGhpcy5fcmVhbGxvYygpO1xuICAgIH1cblxuICAgIHRoaXMucG9zID0gZW5jb2RlKHZhbHVlLCB0aGlzLmJ1ZmZlciwgdGhpcy5wb3MpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIG1hcHBpbmdzLlxuICAgKi9cblxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5idWZmZXIudG9TdHJpbmcoXCJhc2NpaVwiLCAwLCB0aGlzLnBvcyk7XG4gIH1cblxuICBfd3JpdGVCeXRlKGJ5dGUpIHtcbiAgICBpZiAodGhpcy5wb3MgPT09IHRoaXMuYnVmZmVyLmxlbmd0aCkge1xuICAgICAgdGhpcy5fcmVhbGxvYygpO1xuICAgIH1cblxuICAgIHRoaXMuYnVmZmVyW3RoaXMucG9zKytdID0gYnl0ZTtcbiAgfVxuXG4gIF9yZWFsbG9jKCkge1xuICAgIGNvbnN0IGJ1ZmZlciA9IHRoaXMuYnVmZmVyO1xuICAgIHRoaXMuYnVmZmVyID0gQnVmZmVyLmFsbG9jKGJ1ZmZlci5sZW5ndGggKiAyKTtcbiAgICBidWZmZXIuY29weSh0aGlzLmJ1ZmZlcik7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCNjRCdWlsZGVyO1xuIl19","map":null},"mtime":1650027886988},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/encode.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Portions Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n/**\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://git.io/vymuA\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * @copyright\n */\n\n/* eslint-disable no-bitwise */\n\"use strict\"; // A map of values to characters for the b64 encoding\n\nconst CHAR_MAP = [\n0x41,\n0x42,\n0x43,\n0x44,\n0x45,\n0x46,\n0x47,\n0x48,\n0x49,\n0x4a,\n0x4b,\n0x4c,\n0x4d,\n0x4e,\n0x4f,\n0x50,\n0x51,\n0x52,\n0x53,\n0x54,\n0x55,\n0x56,\n0x57,\n0x58,\n0x59,\n0x5a,\n0x61,\n0x62,\n0x63,\n0x64,\n0x65,\n0x66,\n0x67,\n0x68,\n0x69,\n0x6a,\n0x6b,\n0x6c,\n0x6d,\n0x6e,\n0x6f,\n0x70,\n0x71,\n0x72,\n0x73,\n0x74,\n0x75,\n0x76,\n0x77,\n0x78,\n0x79,\n0x7a,\n0x30,\n0x31,\n0x32,\n0x33,\n0x34,\n0x35,\n0x36,\n0x37,\n0x38,\n0x39,\n0x2b,\n0x2f];\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nconst VLQ_BASE_SHIFT = 5; // binary: 100000\n\nconst VLQ_BASE = 1 << VLQ_BASE_SHIFT; // binary: 011111\n\nconst VLQ_BASE_MASK = VLQ_BASE - 1; // binary: 100000\n\nconst VLQ_CONTINUATION_BIT = VLQ_BASE;\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\n\nfunction toVLQSigned(value) {\n  return value < 0 ? (-value << 1) + 1 : (value << 1) + 0;\n}\n/**\n * Encodes a number to base64 VLQ format and appends it to the passed-in buffer\n *\n * DON'T USE COMPOUND OPERATORS (eg `>>>=`) ON `let`-DECLARED VARIABLES!\n * V8 WILL DEOPTIMIZE THIS FUNCTION AND MAP CREATION WILL BE 25% SLOWER!\n *\n * DON'T ADD MORE COMMENTS TO THIS FUNCTION TO KEEP ITS LENGTH SHORT ENOUGH FOR\n * V8 OPTIMIZATION!\n */\n\nfunction encode(value, buffer, position) {\n  let vlq = toVLQSigned(value);\n  let digit;\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq = vlq >>> VLQ_BASE_SHIFT;\n\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit = digit | VLQ_CONTINUATION_BIT;\n    }\n\n    buffer[position++] = CHAR_MAP[digit];\n  } while (vlq > 0);\n\n  return position;\n}\n\nmodule.exports = encode;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuY29kZS5qcyJdLCJuYW1lcyI6WyJDSEFSX01BUCIsIlZMUV9CQVNFX1NISUZUIiwiVkxRX0JBU0UiLCJWTFFfQkFTRV9NQVNLIiwiVkxRX0NPTlRJTlVBVElPTl9CSVQiLCJ0b1ZMUVNpZ25lZCIsInZhbHVlIiwiZW5jb2RlIiwiYnVmZmVyIiwicG9zaXRpb24iLCJ2bHEiLCJkaWdpdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGEsQ0FBYzs7QUFFZCxNQUFNQSxRQUFRLEdBQUc7QUFDZixJQURlO0FBRWYsSUFGZTtBQUdmLElBSGU7QUFJZixJQUplO0FBS2YsSUFMZTtBQU1mLElBTmU7QUFPZixJQVBlO0FBUWYsSUFSZTtBQVNmLElBVGU7QUFVZixJQVZlO0FBV2YsSUFYZTtBQVlmLElBWmU7QUFhZixJQWJlO0FBY2YsSUFkZTtBQWVmLElBZmU7QUFnQmYsSUFoQmU7QUFpQmYsSUFqQmU7QUFrQmYsSUFsQmU7QUFtQmYsSUFuQmU7QUFvQmYsSUFwQmU7QUFxQmYsSUFyQmU7QUFzQmYsSUF0QmU7QUF1QmYsSUF2QmU7QUF3QmYsSUF4QmU7QUF5QmYsSUF6QmU7QUEwQmYsSUExQmU7QUEyQmYsSUEzQmU7QUE0QmYsSUE1QmU7QUE2QmYsSUE3QmU7QUE4QmYsSUE5QmU7QUErQmYsSUEvQmU7QUFnQ2YsSUFoQ2U7QUFpQ2YsSUFqQ2U7QUFrQ2YsSUFsQ2U7QUFtQ2YsSUFuQ2U7QUFvQ2YsSUFwQ2U7QUFxQ2YsSUFyQ2U7QUFzQ2YsSUF0Q2U7QUF1Q2YsSUF2Q2U7QUF3Q2YsSUF4Q2U7QUF5Q2YsSUF6Q2U7QUEwQ2YsSUExQ2U7QUEyQ2YsSUEzQ2U7QUE0Q2YsSUE1Q2U7QUE2Q2YsSUE3Q2U7QUE4Q2YsSUE5Q2U7QUErQ2YsSUEvQ2U7QUFnRGYsSUFoRGU7QUFpRGYsSUFqRGU7QUFrRGYsSUFsRGU7QUFtRGYsSUFuRGU7QUFvRGYsSUFwRGU7QUFxRGYsSUFyRGU7QUFzRGYsSUF0RGU7QUF1RGYsSUF2RGU7QUF3RGYsSUF4RGU7QUF5RGYsSUF6RGU7QUEwRGYsSUExRGU7QUEyRGYsSUEzRGU7QUE0RGYsSUE1RGU7QUE2RGYsSUE3RGU7QUE4RGYsSUE5RGU7QUErRGYsSUEvRGU7QUFnRWYsSUFoRWUsQ0FBakI7QUFpRUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNQyxjQUFjLEdBQUcsQ0FBdkIsQyxDQUEwQjs7QUFFMUIsTUFBTUMsUUFBUSxHQUFHLEtBQUtELGNBQXRCLEMsQ0FBc0M7O0FBRXRDLE1BQU1FLGFBQWEsR0FBR0QsUUFBUSxHQUFHLENBQWpDLEMsQ0FBb0M7O0FBRXBDLE1BQU1FLG9CQUFvQixHQUFHRixRQUE3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTRyxXQUFULENBQXFCQyxLQUFyQixFQUE0QjtBQUMxQixTQUFPQSxLQUFLLEdBQUcsQ0FBUixHQUFZLENBQUMsQ0FBQ0EsS0FBRCxJQUFVLENBQVgsSUFBZ0IsQ0FBNUIsR0FBZ0MsQ0FBQ0EsS0FBSyxJQUFJLENBQVYsSUFBZSxDQUF0RDtBQUNEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNDLE1BQVQsQ0FBZ0JELEtBQWhCLEVBQXVCRSxNQUF2QixFQUErQkMsUUFBL0IsRUFBeUM7QUFDdkMsTUFBSUMsR0FBRyxHQUFHTCxXQUFXLENBQUNDLEtBQUQsQ0FBckI7QUFDQSxNQUFJSyxLQUFKOztBQUVBLEtBQUc7QUFDREEsSUFBQUEsS0FBSyxHQUFHRCxHQUFHLEdBQUdQLGFBQWQ7QUFDQU8sSUFBQUEsR0FBRyxHQUFHQSxHQUFHLEtBQUtULGNBQWQ7O0FBRUEsUUFBSVMsR0FBRyxHQUFHLENBQVYsRUFBYTtBQUNYO0FBQ0E7QUFDQUMsTUFBQUEsS0FBSyxHQUFHQSxLQUFLLEdBQUdQLG9CQUFoQjtBQUNEOztBQUVESSxJQUFBQSxNQUFNLENBQUNDLFFBQVEsRUFBVCxDQUFOLEdBQXFCVCxRQUFRLENBQUNXLEtBQUQsQ0FBN0I7QUFDRCxHQVhELFFBV1NELEdBQUcsR0FBRyxDQVhmOztBQWFBLFNBQU9ELFFBQVA7QUFDRDs7QUFFREcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGV2aW4vU0UzMTkvcXVlc3RsaWZlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbm9kZV9tb2R1bGVzL21ldHJvLXNvdXJjZS1tYXAvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUG9ydGlvbnMgQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICpcbiAqIEBmb3JtYXRcbiAqL1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDExIE1vemlsbGEgRm91bmRhdGlvbiBhbmQgY29udHJpYnV0b3JzXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBsaWNlbnNlLiBTZWUgTElDRU5TRSBvcjpcbiAqIGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9CU0QtMy1DbGF1c2VcbiAqXG4gKiBCYXNlZCBvbiB0aGUgQmFzZSA2NCBWTFEgaW1wbGVtZW50YXRpb24gaW4gQ2xvc3VyZSBDb21waWxlcjpcbiAqIGh0dHBzOi8vZ2l0LmlvL3Z5bXVBXG4gKlxuICogQ29weXJpZ2h0IDIwMTEgVGhlIENsb3N1cmUgQ29tcGlsZXIgQXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dFxuICogbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZVxuICogbWV0OlxuICpcbiAqICAqIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0XG4gKiAgICBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG4gKiAgKiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlXG4gKiAgICBjb3B5cmlnaHQgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZ1xuICogICAgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkXG4gKiAgICB3aXRoIHRoZSBkaXN0cmlidXRpb24uXG4gKiAgKiBOZWl0aGVyIHRoZSBuYW1lIG9mIEdvb2dsZSBJbmMuIG5vciB0aGUgbmFtZXMgb2YgaXRzXG4gKiAgICBjb250cmlidXRvcnMgbWF5IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWRcbiAqICAgIGZyb20gdGhpcyBzb2Z0d2FyZSB3aXRob3V0IHNwZWNpZmljIHByaW9yIHdyaXR0ZW4gcGVybWlzc2lvbi5cbiAqXG4gKiBUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTXG4gKiBcIkFTIElTXCIgQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UXG4gKiBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1JcbiAqIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUXG4gKiBPV05FUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCxcbiAqIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1RcbiAqIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLFxuICogREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZXG4gKiBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUXG4gKiAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0VcbiAqIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4gKlxuICogQGNvcHlyaWdodFxuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblwidXNlIHN0cmljdFwiOyAvLyBBIG1hcCBvZiB2YWx1ZXMgdG8gY2hhcmFjdGVycyBmb3IgdGhlIGI2NCBlbmNvZGluZ1xuXG5jb25zdCBDSEFSX01BUCA9IFtcbiAgMHg0MSxcbiAgMHg0MixcbiAgMHg0MyxcbiAgMHg0NCxcbiAgMHg0NSxcbiAgMHg0NixcbiAgMHg0NyxcbiAgMHg0OCxcbiAgMHg0OSxcbiAgMHg0YSxcbiAgMHg0YixcbiAgMHg0YyxcbiAgMHg0ZCxcbiAgMHg0ZSxcbiAgMHg0ZixcbiAgMHg1MCxcbiAgMHg1MSxcbiAgMHg1MixcbiAgMHg1MyxcbiAgMHg1NCxcbiAgMHg1NSxcbiAgMHg1NixcbiAgMHg1NyxcbiAgMHg1OCxcbiAgMHg1OSxcbiAgMHg1YSxcbiAgMHg2MSxcbiAgMHg2MixcbiAgMHg2MyxcbiAgMHg2NCxcbiAgMHg2NSxcbiAgMHg2NixcbiAgMHg2NyxcbiAgMHg2OCxcbiAgMHg2OSxcbiAgMHg2YSxcbiAgMHg2YixcbiAgMHg2YyxcbiAgMHg2ZCxcbiAgMHg2ZSxcbiAgMHg2ZixcbiAgMHg3MCxcbiAgMHg3MSxcbiAgMHg3MixcbiAgMHg3MyxcbiAgMHg3NCxcbiAgMHg3NSxcbiAgMHg3NixcbiAgMHg3NyxcbiAgMHg3OCxcbiAgMHg3OSxcbiAgMHg3YSxcbiAgMHgzMCxcbiAgMHgzMSxcbiAgMHgzMixcbiAgMHgzMyxcbiAgMHgzNCxcbiAgMHgzNSxcbiAgMHgzNixcbiAgMHgzNyxcbiAgMHgzOCxcbiAgMHgzOSxcbiAgMHgyYixcbiAgMHgyZlxuXTsgLy8gQSBzaW5nbGUgYmFzZSA2NCBkaWdpdCBjYW4gY29udGFpbiA2IGJpdHMgb2YgZGF0YS4gRm9yIHRoZSBiYXNlIDY0IHZhcmlhYmxlXG4vLyBsZW5ndGggcXVhbnRpdGllcyB3ZSB1c2UgaW4gdGhlIHNvdXJjZSBtYXAgc3BlYywgdGhlIGZpcnN0IGJpdCBpcyB0aGUgc2lnbixcbi8vIHRoZSBuZXh0IGZvdXIgYml0cyBhcmUgdGhlIGFjdHVhbCB2YWx1ZSwgYW5kIHRoZSA2dGggYml0IGlzIHRoZVxuLy8gY29udGludWF0aW9uIGJpdC4gVGhlIGNvbnRpbnVhdGlvbiBiaXQgdGVsbHMgdXMgd2hldGhlciB0aGVyZSBhcmUgbW9yZVxuLy8gZGlnaXRzIGluIHRoaXMgdmFsdWUgZm9sbG93aW5nIHRoaXMgZGlnaXQuXG4vL1xuLy8gICBDb250aW51YXRpb25cbi8vICAgfCAgICBTaWduXG4vLyAgIHwgICAgfFxuLy8gICBWICAgIFZcbi8vICAgMTAxMDExXG5cbmNvbnN0IFZMUV9CQVNFX1NISUZUID0gNTsgLy8gYmluYXJ5OiAxMDAwMDBcblxuY29uc3QgVkxRX0JBU0UgPSAxIDw8IFZMUV9CQVNFX1NISUZUOyAvLyBiaW5hcnk6IDAxMTExMVxuXG5jb25zdCBWTFFfQkFTRV9NQVNLID0gVkxRX0JBU0UgLSAxOyAvLyBiaW5hcnk6IDEwMDAwMFxuXG5jb25zdCBWTFFfQ09OVElOVUFUSU9OX0JJVCA9IFZMUV9CQVNFO1xuLyoqXG4gKiBDb252ZXJ0cyBmcm9tIGEgdHdvLWNvbXBsZW1lbnQgdmFsdWUgdG8gYSB2YWx1ZSB3aGVyZSB0aGUgc2lnbiBiaXQgaXNcbiAqIHBsYWNlZCBpbiB0aGUgbGVhc3Qgc2lnbmlmaWNhbnQgYml0LiAgRm9yIGV4YW1wbGUsIGFzIGRlY2ltYWxzOlxuICogICAxIGJlY29tZXMgMiAoMTAgYmluYXJ5KSwgLTEgYmVjb21lcyAzICgxMSBiaW5hcnkpXG4gKiAgIDIgYmVjb21lcyA0ICgxMDAgYmluYXJ5KSwgLTIgYmVjb21lcyA1ICgxMDEgYmluYXJ5KVxuICovXG5cbmZ1bmN0aW9uIHRvVkxRU2lnbmVkKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA8IDAgPyAoLXZhbHVlIDw8IDEpICsgMSA6ICh2YWx1ZSA8PCAxKSArIDA7XG59XG4vKipcbiAqIEVuY29kZXMgYSBudW1iZXIgdG8gYmFzZTY0IFZMUSBmb3JtYXQgYW5kIGFwcGVuZHMgaXQgdG8gdGhlIHBhc3NlZC1pbiBidWZmZXJcbiAqXG4gKiBET04nVCBVU0UgQ09NUE9VTkQgT1BFUkFUT1JTIChlZyBgPj4+PWApIE9OIGBsZXRgLURFQ0xBUkVEIFZBUklBQkxFUyFcbiAqIFY4IFdJTEwgREVPUFRJTUlaRSBUSElTIEZVTkNUSU9OIEFORCBNQVAgQ1JFQVRJT04gV0lMTCBCRSAyNSUgU0xPV0VSIVxuICpcbiAqIERPTidUIEFERCBNT1JFIENPTU1FTlRTIFRPIFRISVMgRlVOQ1RJT04gVE8gS0VFUCBJVFMgTEVOR1RIIFNIT1JUIEVOT1VHSCBGT1JcbiAqIFY4IE9QVElNSVpBVElPTiFcbiAqL1xuXG5mdW5jdGlvbiBlbmNvZGUodmFsdWUsIGJ1ZmZlciwgcG9zaXRpb24pIHtcbiAgbGV0IHZscSA9IHRvVkxRU2lnbmVkKHZhbHVlKTtcbiAgbGV0IGRpZ2l0O1xuXG4gIGRvIHtcbiAgICBkaWdpdCA9IHZscSAmIFZMUV9CQVNFX01BU0s7XG4gICAgdmxxID0gdmxxID4+PiBWTFFfQkFTRV9TSElGVDtcblxuICAgIGlmICh2bHEgPiAwKSB7XG4gICAgICAvLyBUaGVyZSBhcmUgc3RpbGwgbW9yZSBkaWdpdHMgaW4gdGhpcyB2YWx1ZSwgc28gd2UgbXVzdCBtYWtlIHN1cmUgdGhlXG4gICAgICAvLyBjb250aW51YXRpb24gYml0IGlzIG1hcmtlZC5cbiAgICAgIGRpZ2l0ID0gZGlnaXQgfCBWTFFfQ09OVElOVUFUSU9OX0JJVDtcbiAgICB9XG5cbiAgICBidWZmZXJbcG9zaXRpb24rK10gPSBDSEFSX01BUFtkaWdpdF07XG4gIH0gd2hpbGUgKHZscSA+IDApO1xuXG4gIHJldHVybiBwb3NpdGlvbjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbmNvZGU7XG4iXX0=","map":null},"mtime":1650027887044},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/Consumer/normalizeSourcePath.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\"; // flowlint-next-line untyped-import:off\n\nconst util = require(\"source-map/lib/util\"); // Extracted from source-map@0.5.6's SourceMapConsumer\n\nfunction normalizeSourcePath(sourceInput, map) {\n  const sourceRoot = map.sourceRoot;\n  let source = sourceInput;\n  source = String(source); // Some source maps produce relative source paths like \"./foo.js\" instead of\n  // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n  // See bugzil.la/1090768.\n\n  source = util.normalize(source); // Always ensure that absolute sources are internally stored relative to\n  // the source root, if the source root is absolute. Not doing this would\n  // be particularly problematic when the source root is a prefix of the\n  // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n\n  source =\n  sourceRoot != null && util.isAbsolute(sourceRoot) && util.isAbsolute(source) ?\n  util.relative(sourceRoot, source) :\n  source;\n  return source;\n}\n\nmodule.exports = normalizeSourcePath;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vcm1hbGl6ZVNvdXJjZVBhdGguanMiXSwibmFtZXMiOlsidXRpbCIsInJlcXVpcmUiLCJub3JtYWxpemVTb3VyY2VQYXRoIiwic291cmNlSW5wdXQiLCJtYXAiLCJzb3VyY2VSb290Iiwic291cmNlIiwiU3RyaW5nIiwibm9ybWFsaXplIiwiaXNBYnNvbHV0ZSIsInJlbGF0aXZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYSxDQUFjOztBQUVkLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQXBCLEMsQ0FBNkM7O0FBRTdDLFNBQVNDLG1CQUFULENBQTZCQyxXQUE3QixFQUEwQ0MsR0FBMUMsRUFBK0M7QUFDN0MsUUFBTUMsVUFBVSxHQUFHRCxHQUFHLENBQUNDLFVBQXZCO0FBQ0EsTUFBSUMsTUFBTSxHQUFHSCxXQUFiO0FBQ0FHLEVBQUFBLE1BQU0sR0FBR0MsTUFBTSxDQUFDRCxNQUFELENBQWYsQ0FINkMsQ0FHcEI7QUFDekI7QUFDQTs7QUFFQUEsRUFBQUEsTUFBTSxHQUFHTixJQUFJLENBQUNRLFNBQUwsQ0FBZUYsTUFBZixDQUFULENBUDZDLENBT1o7QUFDakM7QUFDQTtBQUNBOztBQUVBQSxFQUFBQSxNQUFNO0FBQ0pELEVBQUFBLFVBQVUsSUFBSSxJQUFkLElBQXNCTCxJQUFJLENBQUNTLFVBQUwsQ0FBZ0JKLFVBQWhCLENBQXRCLElBQXFETCxJQUFJLENBQUNTLFVBQUwsQ0FBZ0JILE1BQWhCLENBQXJEO0FBQ0lOLEVBQUFBLElBQUksQ0FBQ1UsUUFBTCxDQUFjTCxVQUFkLEVBQTBCQyxNQUExQixDQURKO0FBRUlBLEVBQUFBLE1BSE47QUFJQSxTQUFPQSxNQUFQO0FBQ0Q7O0FBRURLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsbUJBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZXZpbi9TRTMxOS9xdWVzdGxpZmUvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9ub2RlX21vZHVsZXMvbWV0cm8tc291cmNlLW1hcC9zcmMvQ29uc3VtZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKlxuICogQGZvcm1hdFxuICovXG5cInVzZSBzdHJpY3RcIjsgLy8gZmxvd2xpbnQtbmV4dC1saW5lIHVudHlwZWQtaW1wb3J0Om9mZlxuXG5jb25zdCB1dGlsID0gcmVxdWlyZShcInNvdXJjZS1tYXAvbGliL3V0aWxcIik7IC8vIEV4dHJhY3RlZCBmcm9tIHNvdXJjZS1tYXBAMC41LjYncyBTb3VyY2VNYXBDb25zdW1lclxuXG5mdW5jdGlvbiBub3JtYWxpemVTb3VyY2VQYXRoKHNvdXJjZUlucHV0LCBtYXApIHtcbiAgY29uc3Qgc291cmNlUm9vdCA9IG1hcC5zb3VyY2VSb290O1xuICBsZXQgc291cmNlID0gc291cmNlSW5wdXQ7XG4gIHNvdXJjZSA9IFN0cmluZyhzb3VyY2UpOyAvLyBTb21lIHNvdXJjZSBtYXBzIHByb2R1Y2UgcmVsYXRpdmUgc291cmNlIHBhdGhzIGxpa2UgXCIuL2Zvby5qc1wiIGluc3RlYWQgb2ZcbiAgLy8gXCJmb28uanNcIi4gIE5vcm1hbGl6ZSB0aGVzZSBmaXJzdCBzbyB0aGF0IGZ1dHVyZSBjb21wYXJpc29ucyB3aWxsIHN1Y2NlZWQuXG4gIC8vIFNlZSBidWd6aWwubGEvMTA5MDc2OC5cblxuICBzb3VyY2UgPSB1dGlsLm5vcm1hbGl6ZShzb3VyY2UpOyAvLyBBbHdheXMgZW5zdXJlIHRoYXQgYWJzb2x1dGUgc291cmNlcyBhcmUgaW50ZXJuYWxseSBzdG9yZWQgcmVsYXRpdmUgdG9cbiAgLy8gdGhlIHNvdXJjZSByb290LCBpZiB0aGUgc291cmNlIHJvb3QgaXMgYWJzb2x1dGUuIE5vdCBkb2luZyB0aGlzIHdvdWxkXG4gIC8vIGJlIHBhcnRpY3VsYXJseSBwcm9ibGVtYXRpYyB3aGVuIHRoZSBzb3VyY2Ugcm9vdCBpcyBhIHByZWZpeCBvZiB0aGVcbiAgLy8gc291cmNlICh2YWxpZCwgYnV0IHdoeT8/KS4gU2VlIGdpdGh1YiBpc3N1ZSAjMTk5IGFuZCBidWd6aWwubGEvMTE4ODk4Mi5cblxuICBzb3VyY2UgPVxuICAgIHNvdXJjZVJvb3QgIT0gbnVsbCAmJiB1dGlsLmlzQWJzb2x1dGUoc291cmNlUm9vdCkgJiYgdXRpbC5pc0Fic29sdXRlKHNvdXJjZSlcbiAgICAgID8gdXRpbC5yZWxhdGl2ZShzb3VyY2VSb290LCBzb3VyY2UpXG4gICAgICA6IHNvdXJjZTtcbiAgcmV0dXJuIHNvdXJjZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBub3JtYWxpemVTb3VyY2VQYXRoO1xuIl19","map":null},"mtime":1650027887059},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/composeSourceMaps.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst Consumer = require(\"./Consumer\"); // TODO(t67648443): Bypass the `sort-requires` rule for this file because of a dependency cycle.\n\nConsumer;\n\nconst _require = require(\"source-map\"),\nSourceMapGenerator = _require.SourceMapGenerator; // Originally based on https://github.com/jakobwesthoff/source-map-merger\n\nfunction composeSourceMaps(maps) {\n  // NOTE: require() here to break dependency cycle\n  const SourceMetadataMapConsumer = require(\"metro-symbolicate/src/SourceMetadataMapConsumer\");\n\n  if (maps.length < 1) {\n    throw new Error(\"composeSourceMaps: Expected at least one map\");\n  }\n\n  const firstMap = maps[0];\n  const consumers = maps.\n  map(function (map) {\n    return new Consumer(map);\n  }).\n  reverse();\n  const generator = new SourceMapGenerator({\n    file: consumers[0].file });\n\n  consumers[0].eachMapping((mapping) => {\n    const original = findOriginalPosition(\n    consumers,\n    mapping.generatedLine,\n    mapping.generatedColumn);\n\n    generator.addMapping({\n      generated: {\n        line: mapping.generatedLine,\n        column: mapping.generatedColumn },\n\n      original:\n      original.line != null ?\n      {\n        line: original.line,\n        column: original.column } :\n\n      null,\n      source: original.source,\n      name: original.name });\n\n  });\n  const composedMap = generator.toJSON();\n  composedMap.sourcesContent = composedMap.sources.map((source) =>\n  consumers[consumers.length - 1].sourceContentFor(source, true));\n\n\n  if (composedMap.sourcesContent.every((content) => content == null)) {\n    delete composedMap.sourcesContent;\n  }\n\n  const metadataConsumer = new SourceMetadataMapConsumer(firstMap);\n  composedMap.x_facebook_sources = metadataConsumer.toArray(\n  composedMap.sources);\n\n  const function_offsets = maps[maps.length - 1].x_hermes_function_offsets;\n\n  if (function_offsets) {\n    composedMap.x_hermes_function_offsets = function_offsets;\n  }\n\n  return composedMap;\n}\n\nfunction findOriginalPosition(consumers, generatedLine, generatedColumn) {\n  let currentLine = generatedLine;\n  let currentColumn = generatedColumn;\n  let original = {\n    line: null,\n    column: null,\n    source: null,\n    name: null };\n\n\n  for (const consumer of consumers) {\n    if (currentLine == null || currentColumn == null) {\n      return {\n        line: null,\n        column: null,\n        source: null,\n        name: null };\n\n    }\n\n    original = consumer.originalPositionFor({\n      line: currentLine,\n      column: currentColumn });\n\n    currentLine = original.line;\n    currentColumn = original.column;\n\n    if (currentLine == null) {\n      return {\n        line: null,\n        column: null,\n        source: null,\n        name: null };\n\n    }\n  }\n\n  return original;\n}\n\nmodule.exports = composeSourceMaps;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null},"mtime":1650027887015},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/BundleBuilder.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nconst EMPTY_MAP = {\n  version: 3,\n  sources: [],\n  names: [],\n  mappings: \"A\" };\n\n/**\n * Builds a source-mapped bundle by concatenating strings and their\n * corresponding source maps (if any).\n *\n * Usage:\n *\n * const builder = new BundleBuilder('bundle.js');\n * builder\n *   .append('foo\\n', fooMap)\n *   .append('bar\\n')\n *   // ...\n * const code = builder.getCode();\n * const map = builder.getMap();\n */\n\nclass BundleBuilder {\n  constructor(file) {\n    this._file = file;\n    this._sections = [];\n    this._line = 0;\n    this._column = 0;\n    this._code = \"\";\n    this._afterMappedContent = false;\n  }\n\n  _pushMapSection(map) {\n    this._sections.push({\n      map,\n      offset: {\n        column: this._column,\n        line: this._line } });\n\n\n  }\n\n  _endMappedContent() {\n    if (this._afterMappedContent) {\n      this._pushMapSection(EMPTY_MAP);\n\n      this._afterMappedContent = false;\n    }\n  }\n\n  append(code, map) {\n    if (!code.length) {\n      return this;\n    }\n\n    const _measureString = measureString(code),\n    lineBreaks = _measureString.lineBreaks,\n    lastLineColumns = _measureString.lastLineColumns;\n\n    if (map) {\n      this._pushMapSection(map);\n\n      this._afterMappedContent = true;\n    } else {\n      this._endMappedContent();\n    }\n\n    this._afterMappedContent = !!map;\n    this._line = this._line + lineBreaks;\n\n    if (lineBreaks > 0) {\n      this._column = lastLineColumns;\n    } else {\n      this._column = this._column + lastLineColumns;\n    }\n\n    this._code = this._code + code;\n    return this;\n  }\n\n  getMap() {\n    this._endMappedContent();\n\n    return createIndexMap(this._file, this._sections);\n  }\n\n  getCode() {\n    return this._code;\n  }}\n\n\nconst reLineBreak = /\\r\\n|\\r|\\n/g;\n\nfunction measureString(str) {\n  let lineBreaks = 0;\n  let match;\n  let lastLineStart = 0;\n\n  while (match = reLineBreak.exec(str)) {\n    ++lineBreaks;\n    lastLineStart = match.index + match[0].length;\n  }\n\n  const lastLineColumns = str.length - lastLineStart;\n  return {\n    lineBreaks,\n    lastLineColumns };\n\n}\n\nfunction createIndexMap(file, sections) {\n  return {\n    version: 3,\n    file,\n    sections };\n\n}\n\nmodule.exports = {\n  BundleBuilder,\n  createIndexMap };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1bmRsZUJ1aWxkZXIuanMiXSwibmFtZXMiOlsiRU1QVFlfTUFQIiwidmVyc2lvbiIsInNvdXJjZXMiLCJuYW1lcyIsIm1hcHBpbmdzIiwiQnVuZGxlQnVpbGRlciIsImNvbnN0cnVjdG9yIiwiZmlsZSIsIl9maWxlIiwiX3NlY3Rpb25zIiwiX2xpbmUiLCJfY29sdW1uIiwiX2NvZGUiLCJfYWZ0ZXJNYXBwZWRDb250ZW50IiwiX3B1c2hNYXBTZWN0aW9uIiwibWFwIiwicHVzaCIsIm9mZnNldCIsImNvbHVtbiIsImxpbmUiLCJfZW5kTWFwcGVkQ29udGVudCIsImFwcGVuZCIsImNvZGUiLCJsZW5ndGgiLCJfbWVhc3VyZVN0cmluZyIsIm1lYXN1cmVTdHJpbmciLCJsaW5lQnJlYWtzIiwibGFzdExpbmVDb2x1bW5zIiwiZ2V0TWFwIiwiY3JlYXRlSW5kZXhNYXAiLCJnZXRDb2RlIiwicmVMaW5lQnJlYWsiLCJzdHIiLCJtYXRjaCIsImxhc3RMaW5lU3RhcnQiLCJleGVjIiwiaW5kZXgiLCJzZWN0aW9ucyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU1BLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsT0FBTyxFQUFFLENBRE87QUFFaEJDLEVBQUFBLE9BQU8sRUFBRSxFQUZPO0FBR2hCQyxFQUFBQSxLQUFLLEVBQUUsRUFIUztBQUloQkMsRUFBQUEsUUFBUSxFQUFFLEdBSk0sRUFBbEI7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNQyxhQUFOLENBQW9CO0FBQ2xCQyxFQUFBQSxXQUFXLENBQUNDLElBQUQsRUFBTztBQUNoQixTQUFLQyxLQUFMLEdBQWFELElBQWI7QUFDQSxTQUFLRSxTQUFMLEdBQWlCLEVBQWpCO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLENBQWI7QUFDQSxTQUFLQyxPQUFMLEdBQWUsQ0FBZjtBQUNBLFNBQUtDLEtBQUwsR0FBYSxFQUFiO0FBQ0EsU0FBS0MsbUJBQUwsR0FBMkIsS0FBM0I7QUFDRDs7QUFFREMsRUFBQUEsZUFBZSxDQUFDQyxHQUFELEVBQU07QUFDbkIsU0FBS04sU0FBTCxDQUFlTyxJQUFmLENBQW9CO0FBQ2xCRCxNQUFBQSxHQURrQjtBQUVsQkUsTUFBQUEsTUFBTSxFQUFFO0FBQ05DLFFBQUFBLE1BQU0sRUFBRSxLQUFLUCxPQURQO0FBRU5RLFFBQUFBLElBQUksRUFBRSxLQUFLVCxLQUZMLEVBRlUsRUFBcEI7OztBQU9EOztBQUVEVSxFQUFBQSxpQkFBaUIsR0FBRztBQUNsQixRQUFJLEtBQUtQLG1CQUFULEVBQThCO0FBQzVCLFdBQUtDLGVBQUwsQ0FBcUJkLFNBQXJCOztBQUVBLFdBQUthLG1CQUFMLEdBQTJCLEtBQTNCO0FBQ0Q7QUFDRjs7QUFFRFEsRUFBQUEsTUFBTSxDQUFDQyxJQUFELEVBQU9QLEdBQVAsRUFBWTtBQUNoQixRQUFJLENBQUNPLElBQUksQ0FBQ0MsTUFBVixFQUFrQjtBQUNoQixhQUFPLElBQVA7QUFDRDs7QUFFRCxVQUFNQyxjQUFjLEdBQUdDLGFBQWEsQ0FBQ0gsSUFBRCxDQUFwQztBQUNFSSxJQUFBQSxVQUFVLEdBQUdGLGNBQWMsQ0FBQ0UsVUFEOUI7QUFFRUMsSUFBQUEsZUFBZSxHQUFHSCxjQUFjLENBQUNHLGVBRm5DOztBQUlBLFFBQUlaLEdBQUosRUFBUztBQUNQLFdBQUtELGVBQUwsQ0FBcUJDLEdBQXJCOztBQUVBLFdBQUtGLG1CQUFMLEdBQTJCLElBQTNCO0FBQ0QsS0FKRCxNQUlPO0FBQ0wsV0FBS08saUJBQUw7QUFDRDs7QUFFRCxTQUFLUCxtQkFBTCxHQUEyQixDQUFDLENBQUNFLEdBQTdCO0FBQ0EsU0FBS0wsS0FBTCxHQUFhLEtBQUtBLEtBQUwsR0FBYWdCLFVBQTFCOztBQUVBLFFBQUlBLFVBQVUsR0FBRyxDQUFqQixFQUFvQjtBQUNsQixXQUFLZixPQUFMLEdBQWVnQixlQUFmO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsV0FBS2hCLE9BQUwsR0FBZSxLQUFLQSxPQUFMLEdBQWVnQixlQUE5QjtBQUNEOztBQUVELFNBQUtmLEtBQUwsR0FBYSxLQUFLQSxLQUFMLEdBQWFVLElBQTFCO0FBQ0EsV0FBTyxJQUFQO0FBQ0Q7O0FBRURNLEVBQUFBLE1BQU0sR0FBRztBQUNQLFNBQUtSLGlCQUFMOztBQUVBLFdBQU9TLGNBQWMsQ0FBQyxLQUFLckIsS0FBTixFQUFhLEtBQUtDLFNBQWxCLENBQXJCO0FBQ0Q7O0FBRURxQixFQUFBQSxPQUFPLEdBQUc7QUFDUixXQUFPLEtBQUtsQixLQUFaO0FBQ0QsR0FsRWlCOzs7QUFxRXBCLE1BQU1tQixXQUFXLEdBQUcsYUFBcEI7O0FBRUEsU0FBU04sYUFBVCxDQUF1Qk8sR0FBdkIsRUFBNEI7QUFDMUIsTUFBSU4sVUFBVSxHQUFHLENBQWpCO0FBQ0EsTUFBSU8sS0FBSjtBQUNBLE1BQUlDLGFBQWEsR0FBRyxDQUFwQjs7QUFFQSxTQUFRRCxLQUFLLEdBQUdGLFdBQVcsQ0FBQ0ksSUFBWixDQUFpQkgsR0FBakIsQ0FBaEIsRUFBd0M7QUFDdEMsTUFBRU4sVUFBRjtBQUNBUSxJQUFBQSxhQUFhLEdBQUdELEtBQUssQ0FBQ0csS0FBTixHQUFjSCxLQUFLLENBQUMsQ0FBRCxDQUFMLENBQVNWLE1BQXZDO0FBQ0Q7O0FBRUQsUUFBTUksZUFBZSxHQUFHSyxHQUFHLENBQUNULE1BQUosR0FBYVcsYUFBckM7QUFDQSxTQUFPO0FBQ0xSLElBQUFBLFVBREs7QUFFTEMsSUFBQUEsZUFGSyxFQUFQOztBQUlEOztBQUVELFNBQVNFLGNBQVQsQ0FBd0J0QixJQUF4QixFQUE4QjhCLFFBQTlCLEVBQXdDO0FBQ3RDLFNBQU87QUFDTHBDLElBQUFBLE9BQU8sRUFBRSxDQURKO0FBRUxNLElBQUFBLElBRks7QUFHTDhCLElBQUFBLFFBSEssRUFBUDs7QUFLRDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZsQyxFQUFBQSxhQURlO0FBRWZ3QixFQUFBQSxjQUZlLEVBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZXZpbi9TRTMxOS9xdWVzdGxpZmUvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9ub2RlX21vZHVsZXMvbWV0cm8tc291cmNlLW1hcC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKlxuICogQGZvcm1hdFxuICovXG5cInVzZSBzdHJpY3RcIjtcblxuY29uc3QgRU1QVFlfTUFQID0ge1xuICB2ZXJzaW9uOiAzLFxuICBzb3VyY2VzOiBbXSxcbiAgbmFtZXM6IFtdLFxuICBtYXBwaW5nczogXCJBXCJcbn07XG4vKipcbiAqIEJ1aWxkcyBhIHNvdXJjZS1tYXBwZWQgYnVuZGxlIGJ5IGNvbmNhdGVuYXRpbmcgc3RyaW5ncyBhbmQgdGhlaXJcbiAqIGNvcnJlc3BvbmRpbmcgc291cmNlIG1hcHMgKGlmIGFueSkuXG4gKlxuICogVXNhZ2U6XG4gKlxuICogY29uc3QgYnVpbGRlciA9IG5ldyBCdW5kbGVCdWlsZGVyKCdidW5kbGUuanMnKTtcbiAqIGJ1aWxkZXJcbiAqICAgLmFwcGVuZCgnZm9vXFxuJywgZm9vTWFwKVxuICogICAuYXBwZW5kKCdiYXJcXG4nKVxuICogICAvLyAuLi5cbiAqIGNvbnN0IGNvZGUgPSBidWlsZGVyLmdldENvZGUoKTtcbiAqIGNvbnN0IG1hcCA9IGJ1aWxkZXIuZ2V0TWFwKCk7XG4gKi9cblxuY2xhc3MgQnVuZGxlQnVpbGRlciB7XG4gIGNvbnN0cnVjdG9yKGZpbGUpIHtcbiAgICB0aGlzLl9maWxlID0gZmlsZTtcbiAgICB0aGlzLl9zZWN0aW9ucyA9IFtdO1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICAgIHRoaXMuX2NvbHVtbiA9IDA7XG4gICAgdGhpcy5fY29kZSA9IFwiXCI7XG4gICAgdGhpcy5fYWZ0ZXJNYXBwZWRDb250ZW50ID0gZmFsc2U7XG4gIH1cblxuICBfcHVzaE1hcFNlY3Rpb24obWFwKSB7XG4gICAgdGhpcy5fc2VjdGlvbnMucHVzaCh7XG4gICAgICBtYXAsXG4gICAgICBvZmZzZXQ6IHtcbiAgICAgICAgY29sdW1uOiB0aGlzLl9jb2x1bW4sXG4gICAgICAgIGxpbmU6IHRoaXMuX2xpbmVcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIF9lbmRNYXBwZWRDb250ZW50KCkge1xuICAgIGlmICh0aGlzLl9hZnRlck1hcHBlZENvbnRlbnQpIHtcbiAgICAgIHRoaXMuX3B1c2hNYXBTZWN0aW9uKEVNUFRZX01BUCk7XG5cbiAgICAgIHRoaXMuX2FmdGVyTWFwcGVkQ29udGVudCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGFwcGVuZChjb2RlLCBtYXApIHtcbiAgICBpZiAoIWNvZGUubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBjb25zdCBfbWVhc3VyZVN0cmluZyA9IG1lYXN1cmVTdHJpbmcoY29kZSksXG4gICAgICBsaW5lQnJlYWtzID0gX21lYXN1cmVTdHJpbmcubGluZUJyZWFrcyxcbiAgICAgIGxhc3RMaW5lQ29sdW1ucyA9IF9tZWFzdXJlU3RyaW5nLmxhc3RMaW5lQ29sdW1ucztcblxuICAgIGlmIChtYXApIHtcbiAgICAgIHRoaXMuX3B1c2hNYXBTZWN0aW9uKG1hcCk7XG5cbiAgICAgIHRoaXMuX2FmdGVyTWFwcGVkQ29udGVudCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2VuZE1hcHBlZENvbnRlbnQoKTtcbiAgICB9XG5cbiAgICB0aGlzLl9hZnRlck1hcHBlZENvbnRlbnQgPSAhIW1hcDtcbiAgICB0aGlzLl9saW5lID0gdGhpcy5fbGluZSArIGxpbmVCcmVha3M7XG5cbiAgICBpZiAobGluZUJyZWFrcyA+IDApIHtcbiAgICAgIHRoaXMuX2NvbHVtbiA9IGxhc3RMaW5lQ29sdW1ucztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fY29sdW1uID0gdGhpcy5fY29sdW1uICsgbGFzdExpbmVDb2x1bW5zO1xuICAgIH1cblxuICAgIHRoaXMuX2NvZGUgPSB0aGlzLl9jb2RlICsgY29kZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGdldE1hcCgpIHtcbiAgICB0aGlzLl9lbmRNYXBwZWRDb250ZW50KCk7XG5cbiAgICByZXR1cm4gY3JlYXRlSW5kZXhNYXAodGhpcy5fZmlsZSwgdGhpcy5fc2VjdGlvbnMpO1xuICB9XG5cbiAgZ2V0Q29kZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fY29kZTtcbiAgfVxufVxuXG5jb25zdCByZUxpbmVCcmVhayA9IC9cXHJcXG58XFxyfFxcbi9nO1xuXG5mdW5jdGlvbiBtZWFzdXJlU3RyaW5nKHN0cikge1xuICBsZXQgbGluZUJyZWFrcyA9IDA7XG4gIGxldCBtYXRjaDtcbiAgbGV0IGxhc3RMaW5lU3RhcnQgPSAwO1xuXG4gIHdoaWxlICgobWF0Y2ggPSByZUxpbmVCcmVhay5leGVjKHN0cikpKSB7XG4gICAgKytsaW5lQnJlYWtzO1xuICAgIGxhc3RMaW5lU3RhcnQgPSBtYXRjaC5pbmRleCArIG1hdGNoWzBdLmxlbmd0aDtcbiAgfVxuXG4gIGNvbnN0IGxhc3RMaW5lQ29sdW1ucyA9IHN0ci5sZW5ndGggLSBsYXN0TGluZVN0YXJ0O1xuICByZXR1cm4ge1xuICAgIGxpbmVCcmVha3MsXG4gICAgbGFzdExpbmVDb2x1bW5zXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUluZGV4TWFwKGZpbGUsIHNlY3Rpb25zKSB7XG4gIHJldHVybiB7XG4gICAgdmVyc2lvbjogMyxcbiAgICBmaWxlLFxuICAgIHNlY3Rpb25zXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBCdW5kbGVCdWlsZGVyLFxuICBjcmVhdGVJbmRleE1hcFxufTtcbiJdfQ==","map":null},"mtime":1650027886994},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/react-native/node_modules/metro-source-map/src/generateFunctionMap.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:test":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\"use strict\";\n\nvar _traverse = _interopRequireDefault(require(\"@babel/traverse\"));\n\nvar _types = require(\"@babel/types\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ?\n  obj :\n  {\n    default: obj };\n\n}\n\nfunction _slicedToArray(arr, i) {\n  return (\n    _arrayWithHoles(arr) ||\n    _iterableToArrayLimit(arr, i) ||\n    _unsupportedIterableToArray(arr, i) ||\n    _nonIterableRest());\n\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\n  \"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr)))\n  return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (\n    var _i = arr[Symbol.iterator](), _s;\n    !(_n = (_s = _i.next()).done);\n    _n = true)\n    {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return (\n    _arrayWithoutHoles(arr) ||\n    _iterableToArray(arr) ||\n    _unsupportedIterableToArray(arr) ||\n    _nonIterableSpread());\n\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\n  \"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n  return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter))\n  return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nconst B64Builder = require(\"./B64Builder\");\n\nconst fsPath = require(\"path\");\n\nconst nullthrows = require(\"nullthrows\");\n\nconst t = require(\"@babel/types\");\n/**\n * Generate a map of source positions to function names. The names are meant to\n * describe the stack frame in an error trace and may contain more contextual\n * information than just the actual name of the function.\n *\n * The output is encoded for use in a source map. For details about the format,\n * see MappingEncoder below.\n */\n\nfunction generateFunctionMap(ast, context) {\n  const encoder = new MappingEncoder();\n  forEachMapping(ast, context, (mapping) => encoder.push(mapping));\n  return encoder.getResult();\n}\n/**\n * Same as generateFunctionMap, but returns the raw array of mappings instead\n * of encoding it for use in a source map.\n *\n * Lines are 1-based and columns are 0-based.\n */\n\nfunction generateFunctionMappingsArray(ast, context) {\n  const mappings = [];\n  forEachMapping(ast, context, (mapping) => {\n    mappings.push(mapping);\n  });\n  return mappings;\n}\n/**\n * Traverses a Babel AST and calls the supplied callback with function name\n * mappings, one at a time.\n */\n\nfunction forEachMapping(ast, context, pushMapping) {\n  const nameStack = [];\n  let tailPos = {\n    line: 1,\n    column: 0 };\n\n  let tailName = null;\n\n  function advanceToPos(pos) {\n    if (tailPos && positionGreater(pos, tailPos)) {\n      const name = nameStack[0].name; // We always have at least Program\n\n      if (name !== tailName) {\n        pushMapping({\n          name,\n          start: {\n            line: tailPos.line,\n            column: tailPos.column } });\n\n\n        tailName = name;\n      }\n    }\n\n    tailPos = pos;\n  }\n\n  function pushFrame(name, loc) {\n    advanceToPos(loc.start);\n    nameStack.unshift({\n      name,\n      loc });\n\n  }\n\n  function popFrame() {\n    const top = nameStack[0];\n\n    if (top) {\n      const loc = top.loc;\n      advanceToPos(loc.end);\n      nameStack.shift();\n    }\n  }\n\n  if (!context) {\n    context = {};\n  }\n\n  const basename = context.filename ?\n  fsPath.basename(context.filename).replace(/\\..+$/, \"\") :\n  null;\n  const visitor = {\n    enter(path) {\n      let name = getNameForPath(path);\n\n      if (basename) {\n        name = removeNamePrefix(name, basename);\n      }\n\n      pushFrame(name, nullthrows(path.node.loc));\n    },\n\n    exit(path) {\n      popFrame();\n    } };\n\n  (0, _traverse.default)(ast, {\n    Function: visitor,\n    Program: visitor,\n    Class: visitor });\n\n}\n\nconst ANONYMOUS_NAME = \"<anonymous>\";\nconst CALLEES_TO_SKIP = [\"Object.freeze\"];\n/**\n * Derive a contextual name for the given AST node (Function, Program, Class or\n * ObjectExpression).\n */\n\nfunction getNameForPath(path) {\n  const node = path.node,\n  parent = path.parent,\n  parentPath = path.parentPath;\n\n  if ((0, _types.isProgram)(node)) {\n    return \"<global>\";\n  }\n\n  let _ref = path,\n  id = _ref.id; // has an `id` so we don't need to infer one\n\n  if (node.id) {\n    // $FlowFixMe Flow error uncovered by typing Babel more strictly\n    return node.id.name;\n  }\n\n  let propertyPath;\n  let kind = \"\";\n\n  if ((0, _types.isObjectMethod)(node) || (0, _types.isClassMethod)(node)) {\n    id = node.key;\n\n    if (node.kind !== \"method\" && node.kind !== \"constructor\") {\n      kind = node.kind;\n    }\n\n    propertyPath = path;\n  } else if (\n  (0, _types.isObjectProperty)(parent) ||\n  (0, _types.isClassProperty)(parent))\n  {\n    // { foo() {} };\n    id = parent.key;\n    propertyPath = parentPath;\n  } else if ((0, _types.isVariableDeclarator)(parent)) {\n    // let foo = function () {};\n    id = parent.id;\n  } else if ((0, _types.isAssignmentExpression)(parent)) {\n    // foo = function () {};\n    id = parent.left;\n  } else if ((0, _types.isJSXExpressionContainer)(parent)) {\n    var _parentPath$parentPat;\n\n    const grandParentNode =\n    parentPath === null || parentPath === void 0 ?\n    void 0 :\n    (_parentPath$parentPat = parentPath.parentPath) === null ||\n    _parentPath$parentPat === void 0 ?\n    void 0 :\n    _parentPath$parentPat.node;\n\n    if ((0, _types.isJSXElement)(grandParentNode)) {\n      // <foo>{function () {}}</foo>\n      const openingElement = grandParentNode.openingElement;\n      id = t.jsxMemberExpression(\n      // $FlowFixMe Flow error uncovered by typing Babel more strictly\n      t.jsxMemberExpression(openingElement.name, t.jsxIdentifier(\"props\")),\n      t.jsxIdentifier(\"children\"));\n\n    } else if ((0, _types.isJSXAttribute)(grandParentNode)) {\n      var _parentPath$parentPat2, _parentPath$parentPat3; // <foo bar={function () {}} />\n\n      const openingElement =\n      parentPath === null || parentPath === void 0 ?\n      void 0 :\n      (_parentPath$parentPat2 = parentPath.parentPath) === null ||\n      _parentPath$parentPat2 === void 0 ?\n      void 0 :\n      (_parentPath$parentPat3 = _parentPath$parentPat2.parentPath) ===\n      null || _parentPath$parentPat3 === void 0 ?\n      void 0 :\n      _parentPath$parentPat3.node;\n      const prop = grandParentNode;\n      id = t.jsxMemberExpression(\n      // $FlowFixMe Flow error uncovered by typing Babel more strictly\n      t.jsxMemberExpression(openingElement.name, t.jsxIdentifier(\"props\")), // $FlowFixMe Flow error uncovered by typing Babel more strictly\n      prop.name);\n\n    }\n  }\n\n  let name = getNameFromId(id);\n\n  if (name == null) {\n    if (\n    (0, _types.isCallExpression)(parent) ||\n    (0, _types.isNewExpression)(parent))\n    {\n      // foo(function () {})\n      const argIndex = parent.arguments.indexOf(node);\n\n      if (argIndex !== -1) {\n        const calleeName = getNameFromId(parent.callee); // var f = Object.freeze(function () {})\n\n        if (CALLEES_TO_SKIP.indexOf(calleeName) !== -1) {\n          return getNameForPath(nullthrows(parentPath));\n        }\n\n        if (calleeName) {\n          return `${calleeName}$argument_${argIndex}`;\n        }\n      }\n    }\n\n    if (\n    (0, _types.isTypeCastExpression)(parent) &&\n    parent.expression === node)\n    {\n      return getNameForPath(nullthrows(parentPath));\n    }\n\n    return ANONYMOUS_NAME;\n  }\n\n  if (kind) {\n    name = kind + \"__\" + name;\n  }\n\n  if (propertyPath) {\n    if ((0, _types.isClassBody)(propertyPath.parent)) {\n      // $FlowFixMe Disvoered when typing babel-traverse\n      const className = getNameForPath(propertyPath.parentPath.parentPath);\n\n      if (className !== ANONYMOUS_NAME) {\n        // $FlowFixMe Flow error uncovered by typing Babel more strictly\n        const separator = propertyPath.node.static ? \".\" : \"#\";\n        name = className + separator + name;\n      }\n    } else if ((0, _types.isObjectExpression)(propertyPath.parent)) {\n      const objectName = getNameForPath(nullthrows(propertyPath.parentPath));\n\n      if (objectName !== ANONYMOUS_NAME) {\n        name = objectName + \".\" + name;\n      }\n    }\n  }\n\n  return name;\n}\n\nfunction isAnyMemberExpression(node) {\n  return (\n    node.type === \"MemberExpression\" || node.type === \"JSXMemberExpression\");\n\n}\n\nfunction isAnyIdentifier(node) {\n  return (0, _types.isIdentifier)(node) || (0, _types.isJSXIdentifier)(node);\n}\n\nfunction getNameFromId(id) {\n  const parts = getNamePartsFromId(id);\n\n  if (!parts.length) {\n    return null;\n  }\n\n  if (parts.length > 5) {\n    return (\n      parts[0] +\n      \".\" +\n      parts[1] +\n      \"...\" +\n      parts[parts.length - 2] +\n      \".\" +\n      parts[parts.length - 1]);\n\n  }\n\n  return parts.join(\".\");\n}\n\nfunction getNamePartsFromId(id) {\n  if (!id) {\n    return [];\n  }\n\n  if ((0, _types.isCallExpression)(id) || (0, _types.isNewExpression)(id)) {\n    return getNamePartsFromId(id.callee);\n  }\n\n  if ((0, _types.isTypeCastExpression)(id)) {\n    return getNamePartsFromId(id.expression);\n  }\n\n  let name;\n\n  if (isAnyIdentifier(id)) {\n    name = id.name;\n  } else if ((0, _types.isNullLiteral)(id)) {\n    name = \"null\";\n  } else if ((0, _types.isRegExpLiteral)(id)) {\n    var _id$flags;\n\n    name = `_${id.pattern}_${\n    (_id$flags = id.flags) !== null && _id$flags !== void 0 ? _id$flags : \"\"\n    }`;\n  } else if ((0, _types.isTemplateLiteral)(id)) {\n    name = id.quasis.map((quasi) => quasi.value.raw).join(\"\");\n  } else if ((0, _types.isLiteral)(id) && id.value != null) {\n    name = String(id.value);\n  }\n\n  if (name != null) {\n    return [t.toBindingIdentifierName(name)];\n  }\n\n  if ((0, _types.isImport)(id)) {\n    name = \"import\";\n  }\n\n  if (name != null) {\n    return [name];\n  }\n\n  if (isAnyMemberExpression(id)) {\n    if (\n    isAnyIdentifier(id.object) &&\n    id.object.name === \"Symbol\" && (\n    isAnyIdentifier(id.property) || (0, _types.isLiteral)(id.property)))\n    {\n      const propertyName = getNameFromId(id.property);\n\n      if (propertyName) {\n        name = \"@@\" + propertyName;\n      }\n    } else {\n      const propertyName = getNamePartsFromId(id.property);\n\n      if (propertyName.length) {\n        const objectName = getNamePartsFromId(id.object);\n\n        if (objectName.length) {\n          return [].concat(\n          _toConsumableArray(objectName),\n          _toConsumableArray(propertyName));\n\n        } else {\n          return propertyName;\n        }\n      }\n    }\n  }\n\n  return name ? [name] : [];\n}\n\nconst DELIMITER_START_RE = /^[^A-Za-z0-9_$@]+/;\n/**\n * Strip the given prefix from `name`, if it occurs there, plus any delimiter\n * characters that follow (of which at least one is required). If an empty\n * string would be returned, return the original name instead.\n */\n\nfunction removeNamePrefix(name, namePrefix) {\n  if (!namePrefix.length || !name.startsWith(namePrefix)) {\n    return name;\n  }\n\n  const shortenedName = name.substr(namePrefix.length);\n\n  const _ref2 = shortenedName.match(DELIMITER_START_RE) || [],\n  _ref3 = _slicedToArray(_ref2, 1),\n  delimiterMatch = _ref3[0];\n\n  if (delimiterMatch) {\n    return shortenedName.substr(delimiterMatch.length) || name;\n  }\n\n  return name;\n}\n/**\n * Encodes function name mappings as deltas in a Base64 VLQ format inspired by\n * the standard source map format.\n *\n * Mappings on different lines are separated with a single `;` (even if there\n * are multiple intervening lines).\n * Mappings on the same line are separated with `,`.\n *\n * The first mapping of a line has the fields:\n *  [column delta, name delta, line delta]\n *\n * where the column delta is relative to the beginning of the line, the name\n * delta is relative to the previously occurring name, and the line delta is\n * relative to the previously occurring line.\n *\n * The 2...nth other mappings of a line have the fields:\n *  [column delta, name delta]\n *\n * where both fields are relative to their previous running values. The line\n * delta is omitted since it is always 0 by definition.\n *\n * Lines and columns are both 0-based in the serialised format. In memory,\n * lines are 1-based while columns are 0-based.\n */\n\nclass MappingEncoder {\n  constructor() {\n    this._namesMap = new Map();\n    this._names = [];\n    this._line = new RelativeValue(1);\n    this._column = new RelativeValue(0);\n    this._nameIndex = new RelativeValue(0);\n    this._mappings = new B64Builder();\n  }\n\n  getResult() {\n    return {\n      names: this._names,\n      mappings: this._mappings.toString() };\n\n  }\n\n  push(_ref4) {\n    let name = _ref4.name,\n    start = _ref4.start;\n\n    let nameIndex = this._namesMap.get(name);\n\n    if (typeof nameIndex !== \"number\") {\n      nameIndex = this._names.length;\n      this._names[nameIndex] = name;\n\n      this._namesMap.set(name, nameIndex);\n    }\n\n    const lineDelta = this._line.next(start.line);\n\n    const firstOfLine = this._mappings.pos === 0 || lineDelta > 0;\n\n    if (lineDelta > 0) {\n      // The next entry will have the line offset, so emit just one semicolon.\n      this._mappings.markLines(1);\n\n      this._column.reset(0);\n    }\n\n    this._mappings.startSegment(this._column.next(start.column));\n\n    this._mappings.append(this._nameIndex.next(nameIndex));\n\n    if (firstOfLine) {\n      this._mappings.append(lineDelta);\n    }\n  }}\n\n\nclass RelativeValue {\n  constructor() {\n    let value =\n    arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    this.reset(value);\n  }\n\n  next(absoluteValue) {\n    const delta = absoluteValue - this._value;\n    this._value = absoluteValue;\n    return delta;\n  }\n\n  reset() {\n    let value =\n    arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    this._value = value;\n  }}\n\n\nfunction positionGreater(x, y) {\n  return x.line > y.line || x.line === y.line && x.column > y.column;\n}\n\nmodule.exports = {\n  generateFunctionMap,\n  generateFunctionMappingsArray };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null},"mtime":1650027887048},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:development":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\"use strict\";\n\nconst main = require(\"./configs/main\");\n\nmodule.exports = function (babel, options) {\n  return main(options);\n};\n\nmodule.exports.getPreset = main.getPreset;\nmodule.exports.passthroughSyntaxPlugins = require(\"./passthrough-syntax-plugins\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1haW4iLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImJhYmVsIiwib3B0aW9ucyIsImdldFByZXNldCIsInBhc3N0aHJvdWdoU3ludGF4UGx1Z2lucyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLGdCQUFELENBQXBCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBU0MsS0FBVCxFQUFnQkMsT0FBaEIsRUFBeUI7QUFDeEMsU0FBT0wsSUFBSSxDQUFDSyxPQUFELENBQVg7QUFDRCxDQUZEOztBQUlBSCxNQUFNLENBQUNDLE9BQVAsQ0FBZUcsU0FBZixHQUEyQk4sSUFBSSxDQUFDTSxTQUFoQztBQUNBSixNQUFNLENBQUNDLE9BQVAsQ0FBZUksd0JBQWYsR0FBMENOLE9BQU8sQ0FBQyw4QkFBRCxDQUFqRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZGV2aW4vU0UzMTkvcXVlc3RsaWZlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9tZXRyby1yZWFjdC1uYXRpdmUtYmFiZWwtcHJlc2V0L3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IG1haW4gPSByZXF1aXJlKFwiLi9jb25maWdzL21haW5cIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYmFiZWwsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG1haW4ob3B0aW9ucyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5nZXRQcmVzZXQgPSBtYWluLmdldFByZXNldDtcbm1vZHVsZS5leHBvcnRzLnBhc3N0aHJvdWdoU3ludGF4UGx1Z2lucyA9IHJlcXVpcmUoXCIuL3Bhc3N0aHJvdWdoLXN5bnRheC1wbHVnaW5zXCIpO1xuIl19","map":null},"mtime":1649858306694},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/configs/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/configs/main.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:development":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly)\n    symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(\n        target,\n        key,\n        Object.getOwnPropertyDescriptor(source, key));\n\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true });\n\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return (\n    _arrayWithoutHoles(arr) ||\n    _iterableToArray(arr) ||\n    _unsupportedIterableToArray(arr) ||\n    _nonIterableSpread());\n\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\n  \"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n  return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter))\n  return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nconst lazyImports = require(\"./lazy-imports\");\n\nconst passthroughSyntaxPlugins = require(\"../passthrough-syntax-plugins\");\n\nfunction isTypeScriptSource(fileName) {\n  return !!fileName && fileName.endsWith(\".ts\");\n}\n\nfunction isTSXSource(fileName) {\n  return !!fileName && fileName.endsWith(\".tsx\");\n}\n\nconst defaultPlugins = [\n[require(\"@babel/plugin-syntax-flow\")],\n[require(\"@babel/plugin-proposal-optional-catch-binding\")],\n[require(\"@babel/plugin-transform-block-scoping\")],\n[\nrequire(\"@babel/plugin-proposal-class-properties\"), // use `this.foo = bar` instead of `this.defineProperty('foo', ...)`\n{\n  loose: true }],\n\n\n[require(\"@babel/plugin-syntax-dynamic-import\")],\n[require(\"@babel/plugin-syntax-export-default-from\")]].\nconcat(_toConsumableArray(passthroughSyntaxPlugins), [\n[require(\"@babel/plugin-transform-destructuring\")],\n[require(\"@babel/plugin-transform-function-name\")],\n[require(\"@babel/plugin-transform-literals\")],\n[require(\"@babel/plugin-transform-parameters\")],\n[require(\"@babel/plugin-transform-regenerator\")],\n[require(\"@babel/plugin-transform-sticky-regex\")],\n[require(\"@babel/plugin-transform-unicode-regex\")]]);\n\nconst es2015ArrowFunctions = [\nrequire(\"@babel/plugin-transform-arrow-functions\")];\n\nconst es2015Classes = [require(\"@babel/plugin-transform-classes\")];\nconst es2015ForOf = [\nrequire(\"@babel/plugin-transform-for-of\"),\n{\n  loose: true }];\n\n\nconst es2015ComputedProperty = [\nrequire(\"@babel/plugin-transform-computed-properties\")];\n\nconst es2015Spread = [require(\"@babel/plugin-transform-spread\")];\nconst es2015TemplateLiterals = [\nrequire(\"@babel/plugin-transform-template-literals\"),\n{\n  loose: true }\n// dont 'a'.concat('b'), just use 'a'+'b'\n];\nconst exponentiationOperator = [\nrequire(\"@babel/plugin-transform-exponentiation-operator\")];\n\nconst shorthandProperties = [\nrequire(\"@babel/plugin-transform-shorthand-properties\")];\n\nconst objectAssign = [require(\"@babel/plugin-transform-object-assign\")];\nconst objectRestSpread = [\nrequire(\"@babel/plugin-proposal-object-rest-spread\"), // Assume no dependence on getters or evaluation order. See https://github.com/babel/babel/pull/11520\n{\n  loose: true }];\n\n\nconst nullishCoalescingOperator = [\nrequire(\"@babel/plugin-proposal-nullish-coalescing-operator\"),\n{\n  loose: true }];\n\n\nconst optionalChaining = [\nrequire(\"@babel/plugin-proposal-optional-chaining\"),\n{\n  loose: true }];\n\n\nconst reactDisplayName = [\nrequire(\"@babel/plugin-transform-react-display-name\")];\n\nconst reactJsxSource = [require(\"@babel/plugin-transform-react-jsx-source\")];\nconst reactJsxSelf = [require(\"@babel/plugin-transform-react-jsx-self\")];\nconst babelRuntime = [\nrequire(\"@babel/plugin-transform-runtime\"),\n{\n  helpers: true,\n  regenerator: true }];\n\n\n\nconst getPreset = (src, options) => {\n  const transformProfile =\n  options && options.unstable_transformProfile || \"default\";\n  const isHermesStable = transformProfile === \"hermes-stable\";\n  const isHermesCanary = transformProfile === \"hermes-canary\";\n  const isHermes = isHermesStable || isHermesCanary;\n  const isNull = src == null;\n  const hasClass = isNull || src.indexOf(\"class\") !== -1;\n  const hasForOf =\n  isNull || src.indexOf(\"for\") !== -1 && src.indexOf(\"of\") !== -1;\n  const extraPlugins = [];\n\n  if (!options.useTransformReactJSXExperimental) {\n    extraPlugins.push([require(\"@babel/plugin-transform-react-jsx\")]);\n  }\n\n  if (!options || !options.disableImportExportTransform) {\n    extraPlugins.push(\n    [require(\"@babel/plugin-proposal-export-default-from\")],\n    [\n    require(\"@babel/plugin-transform-modules-commonjs\"),\n    {\n      strict: false,\n      strictMode: false,\n      // prevent \"use strict\" injections\n      lazy:\n      options && options.lazyImportExportTransform != null ?\n      options.lazyImportExportTransform :\n      (importSpecifier) => lazyImports.has(importSpecifier),\n      allowTopLevelThis: true // dont rewrite global `this` -> `undefined`\n    }]);\n\n\n  }\n\n  if (hasClass) {\n    extraPlugins.push(es2015Classes);\n  } // TODO(gaearon): put this back into '=>' indexOf bailout\n  // and patch react-refresh to not depend on this transform.\n\n  extraPlugins.push(es2015ArrowFunctions);\n\n  if (!isHermesCanary) {\n    extraPlugins.push(es2015ComputedProperty);\n  }\n\n  if (!isHermesCanary && (isNull || hasClass || src.indexOf(\"...\") !== -1)) {\n    extraPlugins.push(es2015Spread);\n    extraPlugins.push(objectRestSpread);\n  }\n\n  if (!isHermes && (isNull || src.indexOf(\"`\") !== -1)) {\n    extraPlugins.push(es2015TemplateLiterals);\n  }\n\n  if (isNull || src.indexOf(\"**\") !== -1) {\n    extraPlugins.push(exponentiationOperator);\n  }\n\n  if (isNull || src.indexOf(\"Object.assign\") !== -1) {\n    extraPlugins.push(objectAssign);\n  }\n\n  if (hasForOf) {\n    extraPlugins.push(es2015ForOf);\n  }\n\n  if (\n  isNull ||\n  src.indexOf(\"React.createClass\") !== -1 ||\n  src.indexOf(\"createReactClass\") !== -1)\n  {\n    extraPlugins.push(reactDisplayName);\n  }\n\n  if (!isHermes && (isNull || src.indexOf(\"?.\") !== -1)) {\n    extraPlugins.push(optionalChaining);\n  }\n\n  if (isNull || src.indexOf(\"??\") !== -1) {\n    extraPlugins.push(nullishCoalescingOperator);\n  }\n\n  if (!isHermes) {\n    extraPlugins.push(shorthandProperties);\n  }\n\n  if (options && options.dev && !options.useTransformReactJSXExperimental) {\n    extraPlugins.push(reactJsxSource);\n    extraPlugins.push(reactJsxSelf);\n  }\n\n  if (!options || options.enableBabelRuntime !== false) {\n    extraPlugins.push(babelRuntime);\n  }\n\n  return {\n    comments: false,\n    compact: true,\n    overrides: [\n    // the flow strip types plugin must go BEFORE class properties!\n    // there'll be a test case that fails if you don't.\n    {\n      plugins: [require(\"@babel/plugin-transform-flow-strip-types\")] },\n\n    {\n      plugins: defaultPlugins },\n\n    {\n      test: isTypeScriptSource,\n      plugins: [\n      [\n      require(\"@babel/plugin-transform-typescript\"),\n      {\n        isTSX: false,\n        allowNamespaces: true }]] },\n\n\n\n\n    {\n      test: isTSXSource,\n      plugins: [\n      [\n      require(\"@babel/plugin-transform-typescript\"),\n      {\n        isTSX: true,\n        allowNamespaces: true }]] },\n\n\n\n\n    {\n      plugins: extraPlugins }] };\n\n\n\n};\n\nmodule.exports = (options) => {\n  if (options.withDevTools == null) {\n    const env = process.env.BABEL_ENV || process.env.NODE_ENV;\n\n    if (!env || env === \"development\") {\n      return getPreset(\n      null,\n      _objectSpread(\n      _objectSpread({}, options),\n      {},\n      {\n        dev: true }));\n\n\n\n    }\n  }\n\n  return getPreset(null, options);\n};\n\nmodule.exports.getPreset = getPreset;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null},"mtime":1649858306854},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/configs/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/configs/lazy-imports.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:development":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n// This is the set of modules that React Native publicly exports and that we\n// want to require lazily. Keep this list in sync with\n// react-native/index.js (though having extra entries here is fairly harmless).\n\"use strict\";\n\nmodule.exports = new Set([\n\"AccessibilityInfo\",\n\"ActivityIndicator\",\n\"Button\",\n\"CheckBox\",\n\"DatePickerIOS\",\n\"DrawerLayoutAndroid\",\n\"FlatList\",\n\"Image\",\n\"ImageBackground\",\n\"InputAccessoryView\",\n\"KeyboardAvoidingView\",\n\"MaskedViewIOS\",\n\"Modal\",\n\"Picker\",\n\"PickerIOS\",\n\"ProgressBarAndroid\",\n\"ProgressViewIOS\",\n\"SafeAreaView\",\n\"ScrollView\",\n\"SectionList\",\n\"SegmentedControlIOS\",\n\"Slider\",\n\"Switch\",\n\"RefreshControl\",\n\"StatusBar\",\n\"SwipeableFlatList\",\n\"Text\",\n\"TextInput\",\n\"Touchable\",\n\"TouchableHighlight\",\n\"TouchableNativeFeedback\",\n\"TouchableOpacity\",\n\"TouchableWithoutFeedback\",\n\"View\",\n\"VirtualizedList\", // APIs\n\"ActionSheetIOS\",\n\"Alert\",\n\"Animated\",\n\"AppRegistry\",\n\"AppState\",\n\"AsyncStorage\",\n\"BackHandler\",\n\"CameraRoll\",\n\"Clipboard\",\n\"DatePickerAndroid\",\n\"DeviceInfo\",\n\"Dimensions\",\n\"Easing\",\n\"ReactNative\",\n\"I18nManager\",\n\"InteractionManager\",\n\"Keyboard\",\n\"LayoutAnimation\",\n\"Linking\",\n\"LogBox\",\n\"NativeEventEmitter\",\n\"PanResponder\",\n\"PermissionsAndroid\",\n\"PixelRatio\",\n\"PushNotificationIOS\",\n\"Settings\",\n\"Share\",\n\"StatusBarIOS\",\n\"StyleSheet\",\n\"Systrace\",\n\"ToastAndroid\",\n\"TVEventHandler\",\n\"UIManager\",\n\"ReactNative\",\n\"UTFSequence\",\n\"Vibration\",\n\"YellowBox\", // Plugins\n\"RCTDeviceEventEmitter\",\n\"RCTNativeAppEventEmitter\",\n\"NativeModules\",\n\"Platform\",\n\"processColor\",\n\"requireNativeComponent\", // Prop Types\n\"DeprecatedColorPropType\",\n\"DeprecatedEdgeInsetsPropType\",\n\"DeprecatedPointPropType\",\n\"DeprecatedViewPropTypes\"]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxhenktaW1wb3J0cy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiU2V0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixJQUFJQyxHQUFKLENBQVE7QUFDdkIsbUJBRHVCO0FBRXZCLG1CQUZ1QjtBQUd2QixRQUh1QjtBQUl2QixVQUp1QjtBQUt2QixlQUx1QjtBQU12QixxQkFOdUI7QUFPdkIsVUFQdUI7QUFRdkIsT0FSdUI7QUFTdkIsaUJBVHVCO0FBVXZCLG9CQVZ1QjtBQVd2QixzQkFYdUI7QUFZdkIsZUFadUI7QUFhdkIsT0FidUI7QUFjdkIsUUFkdUI7QUFldkIsV0FmdUI7QUFnQnZCLG9CQWhCdUI7QUFpQnZCLGlCQWpCdUI7QUFrQnZCLGNBbEJ1QjtBQW1CdkIsWUFuQnVCO0FBb0J2QixhQXBCdUI7QUFxQnZCLHFCQXJCdUI7QUFzQnZCLFFBdEJ1QjtBQXVCdkIsUUF2QnVCO0FBd0J2QixnQkF4QnVCO0FBeUJ2QixXQXpCdUI7QUEwQnZCLG1CQTFCdUI7QUEyQnZCLE1BM0J1QjtBQTRCdkIsV0E1QnVCO0FBNkJ2QixXQTdCdUI7QUE4QnZCLG9CQTlCdUI7QUErQnZCLHlCQS9CdUI7QUFnQ3ZCLGtCQWhDdUI7QUFpQ3ZCLDBCQWpDdUI7QUFrQ3ZCLE1BbEN1QjtBQW1DdkIsaUJBbkN1QixFQW1DSjtBQUNuQixnQkFwQ3VCO0FBcUN2QixPQXJDdUI7QUFzQ3ZCLFVBdEN1QjtBQXVDdkIsYUF2Q3VCO0FBd0N2QixVQXhDdUI7QUF5Q3ZCLGNBekN1QjtBQTBDdkIsYUExQ3VCO0FBMkN2QixZQTNDdUI7QUE0Q3ZCLFdBNUN1QjtBQTZDdkIsbUJBN0N1QjtBQThDdkIsWUE5Q3VCO0FBK0N2QixZQS9DdUI7QUFnRHZCLFFBaER1QjtBQWlEdkIsYUFqRHVCO0FBa0R2QixhQWxEdUI7QUFtRHZCLG9CQW5EdUI7QUFvRHZCLFVBcER1QjtBQXFEdkIsaUJBckR1QjtBQXNEdkIsU0F0RHVCO0FBdUR2QixRQXZEdUI7QUF3RHZCLG9CQXhEdUI7QUF5RHZCLGNBekR1QjtBQTBEdkIsb0JBMUR1QjtBQTJEdkIsWUEzRHVCO0FBNER2QixxQkE1RHVCO0FBNkR2QixVQTdEdUI7QUE4RHZCLE9BOUR1QjtBQStEdkIsY0EvRHVCO0FBZ0V2QixZQWhFdUI7QUFpRXZCLFVBakV1QjtBQWtFdkIsY0FsRXVCO0FBbUV2QixnQkFuRXVCO0FBb0V2QixXQXBFdUI7QUFxRXZCLGFBckV1QjtBQXNFdkIsYUF0RXVCO0FBdUV2QixXQXZFdUI7QUF3RXZCLFdBeEV1QixFQXdFVjtBQUNiLHVCQXpFdUI7QUEwRXZCLDBCQTFFdUI7QUEyRXZCLGVBM0V1QjtBQTRFdkIsVUE1RXVCO0FBNkV2QixjQTdFdUI7QUE4RXZCLHdCQTlFdUIsRUE4RUc7QUFDMUIseUJBL0V1QjtBQWdGdkIsOEJBaEZ1QjtBQWlGdkIseUJBakZ1QjtBQWtGdkIseUJBbEZ1QixDQUFSLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZXZpbi9TRTMxOS9xdWVzdGxpZmUvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21ldHJvLXJlYWN0LW5hdGl2ZS1iYWJlbC1wcmVzZXQvc3JjL2NvbmZpZ3MvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKi9cbi8vIFRoaXMgaXMgdGhlIHNldCBvZiBtb2R1bGVzIHRoYXQgUmVhY3QgTmF0aXZlIHB1YmxpY2x5IGV4cG9ydHMgYW5kIHRoYXQgd2Vcbi8vIHdhbnQgdG8gcmVxdWlyZSBsYXppbHkuIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aFxuLy8gcmVhY3QtbmF0aXZlL2luZGV4LmpzICh0aG91Z2ggaGF2aW5nIGV4dHJhIGVudHJpZXMgaGVyZSBpcyBmYWlybHkgaGFybWxlc3MpLlxuXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IFNldChbXG4gIFwiQWNjZXNzaWJpbGl0eUluZm9cIixcbiAgXCJBY3Rpdml0eUluZGljYXRvclwiLFxuICBcIkJ1dHRvblwiLFxuICBcIkNoZWNrQm94XCIsXG4gIFwiRGF0ZVBpY2tlcklPU1wiLFxuICBcIkRyYXdlckxheW91dEFuZHJvaWRcIixcbiAgXCJGbGF0TGlzdFwiLFxuICBcIkltYWdlXCIsXG4gIFwiSW1hZ2VCYWNrZ3JvdW5kXCIsXG4gIFwiSW5wdXRBY2Nlc3NvcnlWaWV3XCIsXG4gIFwiS2V5Ym9hcmRBdm9pZGluZ1ZpZXdcIixcbiAgXCJNYXNrZWRWaWV3SU9TXCIsXG4gIFwiTW9kYWxcIixcbiAgXCJQaWNrZXJcIixcbiAgXCJQaWNrZXJJT1NcIixcbiAgXCJQcm9ncmVzc0JhckFuZHJvaWRcIixcbiAgXCJQcm9ncmVzc1ZpZXdJT1NcIixcbiAgXCJTYWZlQXJlYVZpZXdcIixcbiAgXCJTY3JvbGxWaWV3XCIsXG4gIFwiU2VjdGlvbkxpc3RcIixcbiAgXCJTZWdtZW50ZWRDb250cm9sSU9TXCIsXG4gIFwiU2xpZGVyXCIsXG4gIFwiU3dpdGNoXCIsXG4gIFwiUmVmcmVzaENvbnRyb2xcIixcbiAgXCJTdGF0dXNCYXJcIixcbiAgXCJTd2lwZWFibGVGbGF0TGlzdFwiLFxuICBcIlRleHRcIixcbiAgXCJUZXh0SW5wdXRcIixcbiAgXCJUb3VjaGFibGVcIixcbiAgXCJUb3VjaGFibGVIaWdobGlnaHRcIixcbiAgXCJUb3VjaGFibGVOYXRpdmVGZWVkYmFja1wiLFxuICBcIlRvdWNoYWJsZU9wYWNpdHlcIixcbiAgXCJUb3VjaGFibGVXaXRob3V0RmVlZGJhY2tcIixcbiAgXCJWaWV3XCIsXG4gIFwiVmlydHVhbGl6ZWRMaXN0XCIsIC8vIEFQSXNcbiAgXCJBY3Rpb25TaGVldElPU1wiLFxuICBcIkFsZXJ0XCIsXG4gIFwiQW5pbWF0ZWRcIixcbiAgXCJBcHBSZWdpc3RyeVwiLFxuICBcIkFwcFN0YXRlXCIsXG4gIFwiQXN5bmNTdG9yYWdlXCIsXG4gIFwiQmFja0hhbmRsZXJcIixcbiAgXCJDYW1lcmFSb2xsXCIsXG4gIFwiQ2xpcGJvYXJkXCIsXG4gIFwiRGF0ZVBpY2tlckFuZHJvaWRcIixcbiAgXCJEZXZpY2VJbmZvXCIsXG4gIFwiRGltZW5zaW9uc1wiLFxuICBcIkVhc2luZ1wiLFxuICBcIlJlYWN0TmF0aXZlXCIsXG4gIFwiSTE4bk1hbmFnZXJcIixcbiAgXCJJbnRlcmFjdGlvbk1hbmFnZXJcIixcbiAgXCJLZXlib2FyZFwiLFxuICBcIkxheW91dEFuaW1hdGlvblwiLFxuICBcIkxpbmtpbmdcIixcbiAgXCJMb2dCb3hcIixcbiAgXCJOYXRpdmVFdmVudEVtaXR0ZXJcIixcbiAgXCJQYW5SZXNwb25kZXJcIixcbiAgXCJQZXJtaXNzaW9uc0FuZHJvaWRcIixcbiAgXCJQaXhlbFJhdGlvXCIsXG4gIFwiUHVzaE5vdGlmaWNhdGlvbklPU1wiLFxuICBcIlNldHRpbmdzXCIsXG4gIFwiU2hhcmVcIixcbiAgXCJTdGF0dXNCYXJJT1NcIixcbiAgXCJTdHlsZVNoZWV0XCIsXG4gIFwiU3lzdHJhY2VcIixcbiAgXCJUb2FzdEFuZHJvaWRcIixcbiAgXCJUVkV2ZW50SGFuZGxlclwiLFxuICBcIlVJTWFuYWdlclwiLFxuICBcIlJlYWN0TmF0aXZlXCIsXG4gIFwiVVRGU2VxdWVuY2VcIixcbiAgXCJWaWJyYXRpb25cIixcbiAgXCJZZWxsb3dCb3hcIiwgLy8gUGx1Z2luc1xuICBcIlJDVERldmljZUV2ZW50RW1pdHRlclwiLFxuICBcIlJDVE5hdGl2ZUFwcEV2ZW50RW1pdHRlclwiLFxuICBcIk5hdGl2ZU1vZHVsZXNcIixcbiAgXCJQbGF0Zm9ybVwiLFxuICBcInByb2Nlc3NDb2xvclwiLFxuICBcInJlcXVpcmVOYXRpdmVDb21wb25lbnRcIiwgLy8gUHJvcCBUeXBlc1xuICBcIkRlcHJlY2F0ZWRDb2xvclByb3BUeXBlXCIsXG4gIFwiRGVwcmVjYXRlZEVkZ2VJbnNldHNQcm9wVHlwZVwiLFxuICBcIkRlcHJlY2F0ZWRQb2ludFByb3BUeXBlXCIsXG4gIFwiRGVwcmVjYXRlZFZpZXdQcm9wVHlwZXNcIlxuXSk7XG4iXX0=","map":null},"mtime":1649858306796},"{\"assumptions\":{},\"sourceRoot\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/\",\"babelrc\":false,\"compact\":false,\"configFile\":false,\"retainLines\":true,\"sourceMaps\":\"inline\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/devin/SE319/questlife/frontend\",\"filename\":\"/Users/devin/SE319/questlife/frontend/node_modules/metro-react-native-babel-preset/src/passthrough-syntax-plugins.js\",\"targets\":{},\"cloneInputAst\":true,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/devin/SE319/questlife/frontend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{},\"externalDependencies\":[]}],\"presets\":[]}:7.17.9:development":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\"use strict\"; // This list of syntax plugins is used for two purposes:\n// 1. Enabling experimental syntax features in the INPUT to the Metro Babel\n//    transformer, regardless of whether we actually transform them.\n// 2. Enabling these same features in parser passes that consume the OUTPUT of\n//    the Metro Babel transformer.\n\nconst passthroughSyntaxPlugins = [\n[require(\"@babel/plugin-syntax-nullish-coalescing-operator\")],\n[require(\"@babel/plugin-syntax-optional-chaining\")]];\n\nmodule.exports = passthroughSyntaxPlugins;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3N0aHJvdWdoLXN5bnRheC1wbHVnaW5zLmpzIl0sIm5hbWVzIjpbInBhc3N0aHJvdWdoU3ludGF4UGx1Z2lucyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYSxDQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTUEsd0JBQXdCLEdBQUc7QUFDL0IsQ0FBQ0MsT0FBTyxDQUFDLGtEQUFELENBQVIsQ0FEK0I7QUFFL0IsQ0FBQ0EsT0FBTyxDQUFDLHdDQUFELENBQVIsQ0FGK0IsQ0FBakM7O0FBSUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsd0JBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9kZXZpbi9TRTMxOS9xdWVzdGxpZmUvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL21ldHJvLXJlYWN0LW5hdGl2ZS1iYWJlbC1wcmVzZXQvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICovXG5cInVzZSBzdHJpY3RcIjsgLy8gVGhpcyBsaXN0IG9mIHN5bnRheCBwbHVnaW5zIGlzIHVzZWQgZm9yIHR3byBwdXJwb3Nlczpcbi8vIDEuIEVuYWJsaW5nIGV4cGVyaW1lbnRhbCBzeW50YXggZmVhdHVyZXMgaW4gdGhlIElOUFVUIHRvIHRoZSBNZXRybyBCYWJlbFxuLy8gICAgdHJhbnNmb3JtZXIsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB3ZSBhY3R1YWxseSB0cmFuc2Zvcm0gdGhlbS5cbi8vIDIuIEVuYWJsaW5nIHRoZXNlIHNhbWUgZmVhdHVyZXMgaW4gcGFyc2VyIHBhc3NlcyB0aGF0IGNvbnN1bWUgdGhlIE9VVFBVVCBvZlxuLy8gICAgdGhlIE1ldHJvIEJhYmVsIHRyYW5zZm9ybWVyLlxuXG5jb25zdCBwYXNzdGhyb3VnaFN5bnRheFBsdWdpbnMgPSBbXG4gIFtyZXF1aXJlKFwiQGJhYmVsL3BsdWdpbi1zeW50YXgtbnVsbGlzaC1jb2FsZXNjaW5nLW9wZXJhdG9yXCIpXSxcbiAgW3JlcXVpcmUoXCJAYmFiZWwvcGx1Z2luLXN5bnRheC1vcHRpb25hbC1jaGFpbmluZ1wiKV1cbl07XG5tb2R1bGUuZXhwb3J0cyA9IHBhc3N0aHJvdWdoU3ludGF4UGx1Z2lucztcbiJdfQ==","map":null},"mtime":1649858306887}}